//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PMS.ApiService.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PMSEntities : DbContext
    {
        public PMSEntities()
            : base("name=PMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<G_BRANCH> G_BRANCH { get; set; }
        public virtual DbSet<G_COMPANY> G_COMPANY { get; set; }
        public virtual DbSet<G_CONTROL> G_CONTROL { get; set; }
        public virtual DbSet<G_COST_CENTER> G_COST_CENTER { get; set; }
        public virtual DbSet<G_ModuleHelp> G_ModuleHelp { get; set; }
        public virtual DbSet<G_MODULES> G_MODULES { get; set; }
        public virtual DbSet<G_Nationality> G_Nationality { get; set; }
        public virtual DbSet<G_REGION> G_REGION { get; set; }
        public virtual DbSet<G_REGION_BRANCH> G_REGION_BRANCH { get; set; }
        public virtual DbSet<G_ReportWebSetting> G_ReportWebSetting { get; set; }
        public virtual DbSet<G_SearchForm> G_SearchForm { get; set; }
        public virtual DbSet<G_SearchFormModule> G_SearchFormModule { get; set; }
        public virtual DbSet<G_SearchFormSetting> G_SearchFormSetting { get; set; }
        public virtual DbSet<G_SMSControl> G_SMSControl { get; set; }
        public virtual DbSet<G_SMSLog> G_SMSLog { get; set; }
        public virtual DbSet<G_STORE> G_STORE { get; set; }
        public virtual DbSet<G_SUB_SYSTEMS> G_SUB_SYSTEMS { get; set; }
        public virtual DbSet<G_SYSTEM> G_SYSTEM { get; set; }
        public virtual DbSet<G_TransCounter> G_TransCounter { get; set; }
        public virtual DbSet<G_TransCounterSetting> G_TransCounterSetting { get; set; }
        public virtual DbSet<G_USER_BRANCH> G_USER_BRANCH { get; set; }
        public virtual DbSet<G_USER_COMPANY> G_USER_COMPANY { get; set; }
        public virtual DbSet<G_USER_FAVORITE> G_USER_FAVORITE { get; set; }
        public virtual DbSet<G_USER_LOG> G_USER_LOG { get; set; }
        public virtual DbSet<G_USER_MODULE> G_USER_MODULE { get; set; }
        public virtual DbSet<G_USER_SUB_SYSTEM> G_USER_SUB_SYSTEM { get; set; }
        public virtual DbSet<G_USER_SYSTEM> G_USER_SYSTEM { get; set; }
        public virtual DbSet<G_USERS> G_USERS { get; set; }
        public virtual DbSet<I_D_Category> I_D_Category { get; set; }
        public virtual DbSet<I_D_Specification> I_D_Specification { get; set; }
        public virtual DbSet<I_D_SpecificationValues> I_D_SpecificationValues { get; set; }
        public virtual DbSet<I_D_UnitGroup> I_D_UnitGroup { get; set; }
        public virtual DbSet<I_D_UnitGroupUom> I_D_UnitGroupUom { get; set; }
        public virtual DbSet<I_D_UOM> I_D_UOM { get; set; }
        public virtual DbSet<I_G_CostMethods> I_G_CostMethods { get; set; }
        public virtual DbSet<I_G_ItemType> I_G_ItemType { get; set; }
        public virtual DbSet<I_G_StockMethods> I_G_StockMethods { get; set; }
        public virtual DbSet<I_Item> I_Item { get; set; }
        public virtual DbSet<I_ItemBatch> I_ItemBatch { get; set; }
        public virtual DbSet<I_ItemSpecsValue> I_ItemSpecsValue { get; set; }
        public virtual DbSet<I_ItemStore> I_ItemStore { get; set; }
        public virtual DbSet<I_ItemStoreBatch> I_ItemStoreBatch { get; set; }
        public virtual DbSet<I_Pay_Vendor> I_Pay_Vendor { get; set; }
        public virtual DbSet<I_Pay_VendorItemCategory> I_Pay_VendorItemCategory { get; set; }
        public virtual DbSet<P_Control> P_Control { get; set; }
        public virtual DbSet<P_D_Activity> P_D_Activity { get; set; }
        public virtual DbSet<P_D_ActivityEquipClass> P_D_ActivityEquipClass { get; set; }
        public virtual DbSet<P_D_ActivityIMaterial> P_D_ActivityIMaterial { get; set; }
        public virtual DbSet<P_D_ActivityLaborClass> P_D_ActivityLaborClass { get; set; }
        public virtual DbSet<P_D_Calender> P_D_Calender { get; set; }
        public virtual DbSet<P_D_CalenderDays> P_D_CalenderDays { get; set; }
        public virtual DbSet<P_D_Equipment> P_D_Equipment { get; set; }
        public virtual DbSet<P_D_EquipmentClass> P_D_EquipmentClass { get; set; }
        public virtual DbSet<P_D_Expences> P_D_Expences { get; set; }
        public virtual DbSet<P_D_ExpencesCategory> P_D_ExpencesCategory { get; set; }
        public virtual DbSet<P_D_Labor> P_D_Labor { get; set; }
        public virtual DbSet<P_D_LaborAbsenceType> P_D_LaborAbsenceType { get; set; }
        public virtual DbSet<P_D_LaborCategory> P_D_LaborCategory { get; set; }
        public virtual DbSet<P_D_LaborClass> P_D_LaborClass { get; set; }
        public virtual DbSet<P_D_LaborLaborClass> P_D_LaborLaborClass { get; set; }
        public virtual DbSet<P_D_LaborOverTimeType> P_D_LaborOverTimeType { get; set; }
        public virtual DbSet<P_D_Location> P_D_Location { get; set; }
        public virtual DbSet<P_D_SalesCustomer> P_D_SalesCustomer { get; set; }
        public virtual DbSet<P_D_SalesCustomerCategory> P_D_SalesCustomerCategory { get; set; }
        public virtual DbSet<P_D_SalesEgineer> P_D_SalesEgineer { get; set; }
        public virtual DbSet<P_D_SalesEngCateory> P_D_SalesEngCateory { get; set; }
        public virtual DbSet<P_D_SalesItems> P_D_SalesItems { get; set; }
        public virtual DbSet<P_D_SalesItemsActivity> P_D_SalesItemsActivity { get; set; }
        public virtual DbSet<P_D_SalesPaymentTerms> P_D_SalesPaymentTerms { get; set; }
        public virtual DbSet<P_D_SalesResponsibility> P_D_SalesResponsibility { get; set; }
        public virtual DbSet<P_D_Scope> P_D_Scope { get; set; }
        public virtual DbSet<P_D_ScopeCategory> P_D_ScopeCategory { get; set; }
        public virtual DbSet<P_D_SiteEngCategory> P_D_SiteEngCategory { get; set; }
        public virtual DbSet<P_D_SiteEngineer> P_D_SiteEngineer { get; set; }
        public virtual DbSet<P_D_Status> P_D_Status { get; set; }
        public virtual DbSet<P_D_SubCandidate> P_D_SubCandidate { get; set; }
        public virtual DbSet<P_D_SubCandidateScope> P_D_SubCandidateScope { get; set; }
        public virtual DbSet<P_D_SubContractor> P_D_SubContractor { get; set; }
        public virtual DbSet<P_D_SubContractorScope> P_D_SubContractorScope { get; set; }
        public virtual DbSet<P_D_UnProdCategory> P_D_UnProdCategory { get; set; }
        public virtual DbSet<P_D_UnProdReason> P_D_UnProdReason { get; set; }
        public virtual DbSet<P_D_UOM> P_D_UOM { get; set; }
        public virtual DbSet<P_G_Budget> P_G_Budget { get; set; }
        public virtual DbSet<P_G_Period> P_G_Period { get; set; }
        public virtual DbSet<P_G_Region> P_G_Region { get; set; }
        public virtual DbSet<P_G_WorkStatus> P_G_WorkStatus { get; set; }
        public virtual DbSet<P_G_YearControl> P_G_YearControl { get; set; }
        public virtual DbSet<P_TR_EngExpensesEntry> P_TR_EngExpensesEntry { get; set; }
        public virtual DbSet<P_TR_EngExpensesEntryDetail> P_TR_EngExpensesEntryDetail { get; set; }
        public virtual DbSet<P_Tr_EngProduction> P_Tr_EngProduction { get; set; }
        public virtual DbSet<P_TR_EngProductionActiv> P_TR_EngProductionActiv { get; set; }
        public virtual DbSet<P_TR_EngProductionEquip> P_TR_EngProductionEquip { get; set; }
        public virtual DbSet<P_TR_EngProductionLabour> P_TR_EngProductionLabour { get; set; }
        public virtual DbSet<P_TR_EngProject> P_TR_EngProject { get; set; }
        public virtual DbSet<P_TR_EngProjectItem> P_TR_EngProjectItem { get; set; }
        public virtual DbSet<P_TR_EngProjectPhase> P_TR_EngProjectPhase { get; set; }
        public virtual DbSet<P_TR_EngSchedule> P_TR_EngSchedule { get; set; }
        public virtual DbSet<P_TR_EngScheduleActiv> P_TR_EngScheduleActiv { get; set; }
        public virtual DbSet<P_TR_EngScheduleEquip> P_TR_EngScheduleEquip { get; set; }
        public virtual DbSet<P_TR_EngScheduleEquipClass> P_TR_EngScheduleEquipClass { get; set; }
        public virtual DbSet<P_TR_EngScheduleLabor> P_TR_EngScheduleLabor { get; set; }
        public virtual DbSet<P_TR_EngScheduleLaborClass> P_TR_EngScheduleLaborClass { get; set; }
        public virtual DbSet<P_TR_EngScheduleMaterial> P_TR_EngScheduleMaterial { get; set; }
        public virtual DbSet<P_TR_EngVariationItem> P_TR_EngVariationItem { get; set; }
        public virtual DbSet<P_TR_ResAbsence> P_TR_ResAbsence { get; set; }
        public virtual DbSet<P_TR_ResAbsenceLabour> P_TR_ResAbsenceLabour { get; set; }
        public virtual DbSet<P_TR_ResMaterialIssue> P_TR_ResMaterialIssue { get; set; }
        public virtual DbSet<P_TR_ResMaterialIssueDetail> P_TR_ResMaterialIssueDetail { get; set; }
        public virtual DbSet<P_TR_ResMaterialReturn> P_TR_ResMaterialReturn { get; set; }
        public virtual DbSet<P_TR_ResMaterialReturnDetail> P_TR_ResMaterialReturnDetail { get; set; }
        public virtual DbSet<P_TR_ResOverTime> P_TR_ResOverTime { get; set; }
        public virtual DbSet<P_TR_ResOverTimeLabour> P_TR_ResOverTimeLabour { get; set; }
        public virtual DbSet<P_TR_ResRequestEquipment> P_TR_ResRequestEquipment { get; set; }
        public virtual DbSet<P_Tr_ResRequestLabour> P_Tr_ResRequestLabour { get; set; }
        public virtual DbSet<P_TR_ResRequestMaterial> P_TR_ResRequestMaterial { get; set; }
        public virtual DbSet<P_TR_ResRequestMaterialDetail> P_TR_ResRequestMaterialDetail { get; set; }
        public virtual DbSet<P_Tr_SalesActivtyPrice> P_Tr_SalesActivtyPrice { get; set; }
        public virtual DbSet<P_Tr_SalesActivtyPriceDetail> P_Tr_SalesActivtyPriceDetail { get; set; }
        public virtual DbSet<P_Tr_SalesBonus> P_Tr_SalesBonus { get; set; }
        public virtual DbSet<P_Tr_SalesBonusDetail> P_Tr_SalesBonusDetail { get; set; }
        public virtual DbSet<P_TR_SalesInvoice> P_TR_SalesInvoice { get; set; }
        public virtual DbSet<P_TR_SalesInvoiceProd> P_TR_SalesInvoiceProd { get; set; }
        public virtual DbSet<P_TR_SalesOffer> P_TR_SalesOffer { get; set; }
        public virtual DbSet<P_Tr_SalesOfferBilling> P_Tr_SalesOfferBilling { get; set; }
        public virtual DbSet<P_Tr_SalesOfferPayment> P_Tr_SalesOfferPayment { get; set; }
        public virtual DbSet<P_TR_SalesOfferResponsibility> P_TR_SalesOfferResponsibility { get; set; }
        public virtual DbSet<P_Tr_SalesOfferStage> P_Tr_SalesOfferStage { get; set; }
        public virtual DbSet<P_Tr_SalesOfferStageItem> P_Tr_SalesOfferStageItem { get; set; }
        public virtual DbSet<P_Tr_SalesOfferStageItemActivity> P_Tr_SalesOfferStageItemActivity { get; set; }
        public virtual DbSet<P_TR_SalesProduction> P_TR_SalesProduction { get; set; }
        public virtual DbSet<P_TR_SalesProductionDetail> P_TR_SalesProductionDetail { get; set; }
        public virtual DbSet<P_TR_SubContract> P_TR_SubContract { get; set; }
        public virtual DbSet<P_TR_SubContractActivity> P_TR_SubContractActivity { get; set; }
        public virtual DbSet<P_TR_SubProduction> P_TR_SubProduction { get; set; }
        public virtual DbSet<P_TR_SubProductionActivity> P_TR_SubProductionActivity { get; set; }
        public virtual DbSet<P_TR_SubServiceOrder> P_TR_SubServiceOrder { get; set; }
        public virtual DbSet<P_TR_SubServiceOrderActivity> P_TR_SubServiceOrderActivity { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<P_TR_EngProductionActiv1102> P_TR_EngProductionActiv1102 { get; set; }
        public virtual DbSet<GQ_GetUserBranch> GQ_GetUserBranch { get; set; }
        public virtual DbSet<GQ_GetUserModule> GQ_GetUserModule { get; set; }
        public virtual DbSet<GQ_GetUserSubsystem> GQ_GetUserSubsystem { get; set; }
        public virtual DbSet<GQ_UserFavorite> GQ_UserFavorite { get; set; }
        public virtual DbSet<IQ_GetItemList> IQ_GetItemList { get; set; }
        public virtual DbSet<PQ_Calc_ActivityCost> PQ_Calc_ActivityCost { get; set; }
        public virtual DbSet<PQ_Calc_ActivityLocalCost> PQ_Calc_ActivityLocalCost { get; set; }
        public virtual DbSet<PQ_G_Budget> PQ_G_Budget { get; set; }
        public virtual DbSet<PQ_GetActivityEquipmentClass> PQ_GetActivityEquipmentClass { get; set; }
        public virtual DbSet<PQ_GetActivityLaborClass> PQ_GetActivityLaborClass { get; set; }
        public virtual DbSet<PQ_GetActivityMaterialClass> PQ_GetActivityMaterialClass { get; set; }
        public virtual DbSet<PQ_GetEngExpenses> PQ_GetEngExpenses { get; set; }
        public virtual DbSet<PQ_GetEngExpensesDetail> PQ_GetEngExpensesDetail { get; set; }
        public virtual DbSet<PQ_GetEngProduction> PQ_GetEngProduction { get; set; }
        public virtual DbSet<PQ_GetEngproductionActivity> PQ_GetEngproductionActivity { get; set; }
        public virtual DbSet<PQ_GetEngProductionEquipment> PQ_GetEngProductionEquipment { get; set; }
        public virtual DbSet<PQ_GetEngProductionItems> PQ_GetEngProductionItems { get; set; }
        public virtual DbSet<PQ_GetEngProductionLabour> PQ_GetEngProductionLabour { get; set; }
        public virtual DbSet<PQ_GetEngProjectItem> PQ_GetEngProjectItem { get; set; }
        public virtual DbSet<PQ_GetEngProjectPhase> PQ_GetEngProjectPhase { get; set; }
        public virtual DbSet<PQ_GetEngServiceOrderActivity> PQ_GetEngServiceOrderActivity { get; set; }
        public virtual DbSet<PQ_GetEngSubCandidateScope> PQ_GetEngSubCandidateScope { get; set; }
        public virtual DbSet<PQ_GetEngSubContract> PQ_GetEngSubContract { get; set; }
        public virtual DbSet<PQ_GetEngSubContractActivity> PQ_GetEngSubContractActivity { get; set; }
        public virtual DbSet<PQ_GetEngSubContractorScope> PQ_GetEngSubContractorScope { get; set; }
        public virtual DbSet<PQ_GetEngSubProduction> PQ_GetEngSubProduction { get; set; }
        public virtual DbSet<PQ_GetEngSubProductionActivity> PQ_GetEngSubProductionActivity { get; set; }
        public virtual DbSet<PQ_GetEngSubProductionItems> PQ_GetEngSubProductionItems { get; set; }
        public virtual DbSet<PQ_GetEngSubServiceOrder> PQ_GetEngSubServiceOrder { get; set; }
        public virtual DbSet<PQ_GetEngVariation> PQ_GetEngVariation { get; set; }
        public virtual DbSet<PQ_GetEngVariationItem> PQ_GetEngVariationItem { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchdule> PQ_GetEngWorkSchdule { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchduleActivity> PQ_GetEngWorkSchduleActivity { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchduleEquip> PQ_GetEngWorkSchduleEquip { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchduleEquipClass> PQ_GetEngWorkSchduleEquipClass { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchduleLabor> PQ_GetEngWorkSchduleLabor { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchduleLaborClass> PQ_GetEngWorkSchduleLaborClass { get; set; }
        public virtual DbSet<PQ_GetEngWorkSchduleMaterial> PQ_GetEngWorkSchduleMaterial { get; set; }
        public virtual DbSet<PQ_GetProjCustomer> PQ_GetProjCustomer { get; set; }
        public virtual DbSet<PQ_GetResEquipAssign> PQ_GetResEquipAssign { get; set; }
        public virtual DbSet<PQ_GetResLabourAbsence> PQ_GetResLabourAbsence { get; set; }
        public virtual DbSet<PQ_GetResLabourAbsenceDetail> PQ_GetResLabourAbsenceDetail { get; set; }
        public virtual DbSet<PQ_GetResLabourAssign> PQ_GetResLabourAssign { get; set; }
        public virtual DbSet<PQ_GetResLabourOverTime> PQ_GetResLabourOverTime { get; set; }
        public virtual DbSet<PQ_GetResLabourOverTimeDetail> PQ_GetResLabourOverTimeDetail { get; set; }
        public virtual DbSet<PQ_GetResMaterialIssue> PQ_GetResMaterialIssue { get; set; }
        public virtual DbSet<PQ_GetResMaterialIssueDetails> PQ_GetResMaterialIssueDetails { get; set; }
        public virtual DbSet<PQ_GetResMaterialReturned> PQ_GetResMaterialReturned { get; set; }
        public virtual DbSet<PQ_GetResMaterialReturnedDetails> PQ_GetResMaterialReturnedDetails { get; set; }
        public virtual DbSet<PQ_GetResReqLabour> PQ_GetResReqLabour { get; set; }
        public virtual DbSet<PQ_GetResRequestEquipment> PQ_GetResRequestEquipment { get; set; }
        public virtual DbSet<PQ_GetResRequestLaborDetails> PQ_GetResRequestLaborDetails { get; set; }
        public virtual DbSet<PQ_GetResRequestLabours> PQ_GetResRequestLabours { get; set; }
        public virtual DbSet<PQ_GetResRequestMaterial> PQ_GetResRequestMaterial { get; set; }
        public virtual DbSet<PQ_GetResRequestMaterialDetails> PQ_GetResRequestMaterialDetails { get; set; }
        public virtual DbSet<PQ_GetResRequestMaterialMontoring> PQ_GetResRequestMaterialMontoring { get; set; }
        public virtual DbSet<PQ_GetSalesActivityPrice> PQ_GetSalesActivityPrice { get; set; }
        public virtual DbSet<PQ_GetSalesActivityPriceDetails> PQ_GetSalesActivityPriceDetails { get; set; }
        public virtual DbSet<PQ_GetSalesCustomer> PQ_GetSalesCustomer { get; set; }
        public virtual DbSet<PQ_GetSalesFillInvoiceProd> PQ_GetSalesFillInvoiceProd { get; set; }
        public virtual DbSet<PQ_GetSalesInvoice> PQ_GetSalesInvoice { get; set; }
        public virtual DbSet<PQ_GetSalesInvoiceDetail> PQ_GetSalesInvoiceDetail { get; set; }
        public virtual DbSet<PQ_GetSalesInvoiceProd> PQ_GetSalesInvoiceProd { get; set; }
        public virtual DbSet<PQ_GetSalesIssueProduction> PQ_GetSalesIssueProduction { get; set; }
        public virtual DbSet<PQ_GetSalesIssueProductionDetails> PQ_GetSalesIssueProductionDetails { get; set; }
        public virtual DbSet<PQ_GetSalesItem> PQ_GetSalesItem { get; set; }
        public virtual DbSet<PQ_GETSalesItemActivity> PQ_GETSalesItemActivity { get; set; }
        public virtual DbSet<PQ_GetSalesManBonus> PQ_GetSalesManBonus { get; set; }
        public virtual DbSet<PQ_GetSalesOffer> PQ_GetSalesOffer { get; set; }
        public virtual DbSet<PQ_GetSlsCustomer> PQ_GetSlsCustomer { get; set; }
        public virtual DbSet<PQ_GetSlsOfferActivity> PQ_GetSlsOfferActivity { get; set; }
        public virtual DbSet<PQ_GetSlsOfferBilling> PQ_GetSlsOfferBilling { get; set; }
        public virtual DbSet<PQ_GetSlsOfferPayment> PQ_GetSlsOfferPayment { get; set; }
        public virtual DbSet<PQ_GetSlsOfferResponsibility> PQ_GetSlsOfferResponsibility { get; set; }
        public virtual DbSet<PQ_GetSlsOfferStage> PQ_GetSlsOfferStage { get; set; }
        public virtual DbSet<PQ_GetSlsOfferStageItem> PQ_GetSlsOfferStageItem { get; set; }
        public virtual DbSet<PQ_LoadEngSubSOContractActivity> PQ_LoadEngSubSOContractActivity { get; set; }
        public virtual DbSet<PQ_ResEquipmentWork> PQ_ResEquipmentWork { get; set; }
        public virtual DbSet<PQ_ResLabourWork> PQ_ResLabourWork { get; set; }
        public virtual DbSet<PQ_Sales_SrchOfferItem> PQ_Sales_SrchOfferItem { get; set; }
        public virtual DbSet<PQ_SalesInvoiceDetail> PQ_SalesInvoiceDetail { get; set; }
        public virtual DbSet<IQ_SrchItem> IQ_SrchItem { get; set; }
        public virtual DbSet<PQ_SearchSchduleMaterial> PQ_SearchSchduleMaterial { get; set; }
        public virtual DbSet<PQ_SrchActivity> PQ_SrchActivity { get; set; }
        public virtual DbSet<PQ_SrchEngProjectActivity> PQ_SrchEngProjectActivity { get; set; }
        public virtual DbSet<PQ_SrchEngProjectPhase> PQ_SrchEngProjectPhase { get; set; }
        public virtual DbSet<PQ_SrchSalesOffer> PQ_SrchSalesOffer { get; set; }
        public virtual DbSet<PQ_SrchSlsItem> PQ_SrchSlsItem { get; set; }
        public virtual DbSet<PQ_SrcSchdule> PQ_SrcSchdule { get; set; }
        public virtual DbSet<G_AlertControl> G_AlertControl { get; set; }
        public virtual DbSet<G_AlertLog> G_AlertLog { get; set; }
        public virtual DbSet<G_AlertType> G_AlertType { get; set; }
        public virtual DbSet<m> m { get; set; }
        public virtual DbSet<P_TR_EngVariation> P_TR_EngVariation { get; set; }
        public virtual DbSet<P_TR_EngProjectActivity> P_TR_EngProjectActivity { get; set; }
        public virtual DbSet<P_TR_EngVariationActivity> P_TR_EngVariationActivity { get; set; }
        public virtual DbSet<PQ_GetEngProjectActivity> PQ_GetEngProjectActivity { get; set; }
        public virtual DbSet<PQ_GetEngVariationActivity> PQ_GetEngVariationActivity { get; set; }
        public virtual DbSet<P_D_SalesCustomerDoc> P_D_SalesCustomerDoc { get; set; }
        public virtual DbSet<PQ_GetSalesCustomerDoc> PQ_GetSalesCustomerDoc { get; set; }
        public virtual DbSet<P_TR_SalesInvoiceDetail> P_TR_SalesInvoiceDetail { get; set; }
        public virtual DbSet<PQ_GetEngProject> PQ_GetEngProject { get; set; }
        public virtual DbSet<P_TR_SalesDbCr> P_TR_SalesDbCr { get; set; }
        public virtual DbSet<P_TR_SalesDbCrDetail> P_TR_SalesDbCrDetail { get; set; }
        public virtual DbSet<PQ_GetSalesDbCr> PQ_GetSalesDbCr { get; set; }
        public virtual DbSet<PQ_GetSalesDbCrDetail> PQ_GetSalesDbCrDetail { get; set; }
    
        public virtual int G_TOL_GetCounter(string system, Nullable<int> comp, Nullable<int> branch, string trType, ObjectParameter trNo)
        {
            var systemParameter = system != null ?
                new ObjectParameter("System", system) :
                new ObjectParameter("System", typeof(string));
    
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("G_TOL_GetCounter", systemParameter, compParameter, branchParameter, trTypeParameter, trNo);
        }
    
        [DbFunction("Entities", "GetSystemsSubsByUserCode")]
        public virtual IQueryable<GetSystemsSubsByUserCode_Result> GetSystemsSubsByUserCode(string uSER_CODE)
        {
            var uSER_CODEParameter = uSER_CODE != null ?
                new ObjectParameter("USER_CODE", uSER_CODE) :
                new ObjectParameter("USER_CODE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSystemsSubsByUserCode_Result>("[Entities].[GetSystemsSubsByUserCode](@USER_CODE)", uSER_CODEParameter);
        }
    
        [DbFunction("Entities", "GFun_Companies")]
        public virtual IQueryable<GFun_Companies_Result> GFun_Companies(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GFun_Companies_Result>("[Entities].[GFun_Companies](@userCode)", userCodeParameter);
        }
    
        [DbFunction("Entities", "GFun_UserCompanyBranch")]
        public virtual IQueryable<GFun_UserCompanyBranch_Result> GFun_UserCompanyBranch(string userCode, Nullable<int> compCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("userCode", userCode) :
                new ObjectParameter("userCode", typeof(string));
    
            var compCodeParameter = compCode.HasValue ?
                new ObjectParameter("CompCode", compCode) :
                new ObjectParameter("CompCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GFun_UserCompanyBranch_Result>("[Entities].[GFun_UserCompanyBranch](@userCode, @CompCode)", userCodeParameter, compCodeParameter);
        }
    
        [DbFunction("Entities", "GFunc_GetPrivilage")]
        public virtual IQueryable<GFunc_GetPrivilage_Result> GFunc_GetPrivilage(Nullable<int> comp, Nullable<int> bra, string user, string sys, string sub, string mod)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var sysParameter = sys != null ?
                new ObjectParameter("Sys", sys) :
                new ObjectParameter("Sys", typeof(string));
    
            var subParameter = sub != null ?
                new ObjectParameter("sub", sub) :
                new ObjectParameter("sub", typeof(string));
    
            var modParameter = mod != null ?
                new ObjectParameter("Mod", mod) :
                new ObjectParameter("Mod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GFunc_GetPrivilage_Result>("[Entities].[GFunc_GetPrivilage](@Comp, @bra, @user, @Sys, @sub, @Mod)", compParameter, braParameter, userParameter, sysParameter, subParameter, modParameter);
        }
    
        public virtual int GProc_CreateUser(string user, string likeUser)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var likeUserParameter = likeUser != null ?
                new ObjectParameter("LikeUser", likeUser) :
                new ObjectParameter("LikeUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GProc_CreateUser", userParameter, likeUserParameter);
        }
    
        [DbFunction("Entities", "P_Calc_BuildActivityTree")]
        public virtual IQueryable<P_Calc_BuildActivityTree_Result> P_Calc_BuildActivityTree(Nullable<int> cOMP_CODE, Nullable<int> actID)
        {
            var cOMP_CODEParameter = cOMP_CODE.HasValue ?
                new ObjectParameter("COMP_CODE", cOMP_CODE) :
                new ObjectParameter("COMP_CODE", typeof(int));
    
            var actIDParameter = actID.HasValue ?
                new ObjectParameter("ActID", actID) :
                new ObjectParameter("ActID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<P_Calc_BuildActivityTree_Result>("[Entities].[P_Calc_BuildActivityTree](@COMP_CODE, @ActID)", cOMP_CODEParameter, actIDParameter);
        }
    
        [DbFunction("Entities", "P_Calc_BuildLocationTree")]
        public virtual IQueryable<P_Calc_BuildLocationTree_Result> P_Calc_BuildLocationTree(Nullable<int> cOMP_CODE, Nullable<int> bra, Nullable<int> locID)
        {
            var cOMP_CODEParameter = cOMP_CODE.HasValue ?
                new ObjectParameter("COMP_CODE", cOMP_CODE) :
                new ObjectParameter("COMP_CODE", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var locIDParameter = locID.HasValue ?
                new ObjectParameter("LocID", locID) :
                new ObjectParameter("LocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<P_Calc_BuildLocationTree_Result>("[Entities].[P_Calc_BuildLocationTree](@COMP_CODE, @Bra, @LocID)", cOMP_CODEParameter, braParameter, locIDParameter);
        }
    
        public virtual int P_ProcessTrans(Nullable<int> comp, Nullable<int> branch, string trType, Nullable<int> trID, ObjectParameter trNo, ObjectParameter ok)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var branchParameter = branch.HasValue ?
                new ObjectParameter("Branch", branch) :
                new ObjectParameter("Branch", typeof(int));
    
            var trTypeParameter = trType != null ?
                new ObjectParameter("TrType", trType) :
                new ObjectParameter("TrType", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ProcessTrans", compParameter, branchParameter, trTypeParameter, trIDParameter, trNo, ok);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseBilling")]
        public virtual IQueryable<PFunc_EngProjectPhaseBilling_Result> PFunc_EngProjectPhaseBilling(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseBilling_Result>("[Entities].[PFunc_EngProjectPhaseBilling](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseEquipUsage")]
        public virtual IQueryable<PFunc_EngProjectPhaseEquipUsage_Result> PFunc_EngProjectPhaseEquipUsage(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseEquipUsage_Result>("[Entities].[PFunc_EngProjectPhaseEquipUsage](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseExpenses")]
        public virtual IQueryable<PFunc_EngProjectPhaseExpenses_Result> PFunc_EngProjectPhaseExpenses(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseExpenses_Result>("[Entities].[PFunc_EngProjectPhaseExpenses](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseLaborUsage")]
        public virtual IQueryable<PFunc_EngProjectPhaseLaborUsage_Result> PFunc_EngProjectPhaseLaborUsage(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseLaborUsage_Result>("[Entities].[PFunc_EngProjectPhaseLaborUsage](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseMaterialTotUsage")]
        public virtual IQueryable<PFunc_EngProjectPhaseMaterialTotUsage_Result> PFunc_EngProjectPhaseMaterialTotUsage(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseMaterialTotUsage_Result>("[Entities].[PFunc_EngProjectPhaseMaterialTotUsage](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseMaterialUsage")]
        public virtual IQueryable<PFunc_EngProjectPhaseMaterialUsage_Result> PFunc_EngProjectPhaseMaterialUsage(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseMaterialUsage_Result>("[Entities].[PFunc_EngProjectPhaseMaterialUsage](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseProduction")]
        public virtual IQueryable<PFunc_EngProjectPhaseProduction_Result> PFunc_EngProjectPhaseProduction(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseProduction_Result>("[Entities].[PFunc_EngProjectPhaseProduction](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseProgress")]
        public virtual IQueryable<PFunc_EngProjectPhaseProgress_Result> PFunc_EngProjectPhaseProgress(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseProgress_Result>("[Entities].[PFunc_EngProjectPhaseProgress](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseSubContract")]
        public virtual IQueryable<PFunc_EngProjectPhaseSubContract_Result> PFunc_EngProjectPhaseSubContract(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseSubContract_Result>("[Entities].[PFunc_EngProjectPhaseSubContract](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseValue")]
        public virtual IQueryable<PFunc_EngProjectPhaseValue_Result> PFunc_EngProjectPhaseValue(Nullable<int> bra)
        {
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseValue_Result>("[Entities].[PFunc_EngProjectPhaseValue](@Bra)", braParameter);
        }
    
        [DbFunction("Entities", "PFunc_EngProjectPhaseVariation")]
        public virtual IQueryable<PFunc_EngProjectPhaseVariation_Result> PFunc_EngProjectPhaseVariation(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> bra)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_EngProjectPhaseVariation_Result>("[Entities].[PFunc_EngProjectPhaseVariation](@FromDate, @toDate, @Bra)", fromDateParameter, toDateParameter, braParameter);
        }
    
        [DbFunction("Entities", "PFunc_ResProjectPhaseReq")]
        public virtual IQueryable<PFunc_ResProjectPhaseReq_Result> PFunc_ResProjectPhaseReq(Nullable<int> bra, Nullable<int> resType)
        {
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var resTypeParameter = resType.HasValue ?
                new ObjectParameter("ResType", resType) :
                new ObjectParameter("ResType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<PFunc_ResProjectPhaseReq_Result>("[Entities].[PFunc_ResProjectPhaseReq](@Bra, @ResType)", braParameter, resTypeParameter);
        }
    
        public virtual int PPrc_CheckDate(Nullable<int> comp, Nullable<int> bra, string dt, ObjectParameter res)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("Comp", comp) :
                new ObjectParameter("Comp", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var dtParameter = dt != null ?
                new ObjectParameter("Dt", dt) :
                new ObjectParameter("Dt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PPrc_CheckDate", compParameter, braParameter, dtParameter, res);
        }
    
        public virtual int PPrc_MonthCalcProdCost(Nullable<int> periodID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PPrc_MonthCalcProdCost", periodIDParameter);
        }
    
        public virtual ObjectResult<PPrc_Res_MaterialRequired_Result> PPrc_Res_MaterialRequired(Nullable<int> projectid, Nullable<int> phaseID)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("Projectid", projectid) :
                new ObjectParameter("Projectid", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PPrc_Res_MaterialRequired_Result>("PPrc_Res_MaterialRequired", projectidParameter, phaseIDParameter);
        }
    
        public virtual int PProc_ApproveCloseMaterialRequest(Nullable<int> reqID, Nullable<int> oldStatus, Nullable<int> newStatus)
        {
            var reqIDParameter = reqID.HasValue ?
                new ObjectParameter("ReqID", reqID) :
                new ObjectParameter("ReqID", typeof(int));
    
            var oldStatusParameter = oldStatus.HasValue ?
                new ObjectParameter("OldStatus", oldStatus) :
                new ObjectParameter("OldStatus", typeof(int));
    
            var newStatusParameter = newStatus.HasValue ?
                new ObjectParameter("NewStatus", newStatus) :
                new ObjectParameter("NewStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_ApproveCloseMaterialRequest", reqIDParameter, oldStatusParameter, newStatusParameter);
        }
    
        public virtual int PProc_BuildWorkSchedulaRequirment(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_BuildWorkSchedulaRequirment", trIDParameter);
        }
    
        public virtual int PProc_CalculateActivityprice(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_CalculateActivityprice", trIDParameter);
        }
    
        public virtual int PProc_CalcWorkHours(string fromDateTime, string toDateTime, Nullable<int> calId, ObjectParameter workHours)
        {
            var fromDateTimeParameter = fromDateTime != null ?
                new ObjectParameter("FromDateTime", fromDateTime) :
                new ObjectParameter("FromDateTime", typeof(string));
    
            var toDateTimeParameter = toDateTime != null ?
                new ObjectParameter("ToDateTime", toDateTime) :
                new ObjectParameter("ToDateTime", typeof(string));
    
            var calIdParameter = calId.HasValue ?
                new ObjectParameter("CalId", calId) :
                new ObjectParameter("CalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_CalcWorkHours", fromDateTimeParameter, toDateTimeParameter, calIdParameter, workHours);
        }
    
        public virtual ObjectResult<PProc_Eng_BudgetEngineer_Result> PProc_Eng_BudgetEngineer(Nullable<int> bra, Nullable<int> yearid, Nullable<int> monthCode, Nullable<int> engId)
        {
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var yearidParameter = yearid.HasValue ?
                new ObjectParameter("Yearid", yearid) :
                new ObjectParameter("Yearid", typeof(int));
    
            var monthCodeParameter = monthCode.HasValue ?
                new ObjectParameter("MonthCode", monthCode) :
                new ObjectParameter("MonthCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Eng_BudgetEngineer_Result>("PProc_Eng_BudgetEngineer", braParameter, yearidParameter, monthCodeParameter, engIdParameter);
        }
    
        public virtual ObjectResult<PProc_Eng_BudgetEngineerActiv_Result> PProc_Eng_BudgetEngineerActiv(Nullable<int> bra, Nullable<int> yearid, Nullable<int> monthCode, Nullable<int> engId)
        {
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var yearidParameter = yearid.HasValue ?
                new ObjectParameter("Yearid", yearid) :
                new ObjectParameter("Yearid", typeof(int));
    
            var monthCodeParameter = monthCode.HasValue ?
                new ObjectParameter("MonthCode", monthCode) :
                new ObjectParameter("MonthCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Eng_BudgetEngineerActiv_Result>("PProc_Eng_BudgetEngineerActiv", braParameter, yearidParameter, monthCodeParameter, engIdParameter);
        }
    
        public virtual int PProc_Eng_ServiceOrderApprove(Nullable<int> trId)
        {
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Eng_ServiceOrderApprove", trIdParameter);
        }
    
        public virtual int PProc_Eng_ServiceOrderClose(Nullable<int> trId)
        {
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Eng_ServiceOrderClose", trIdParameter);
        }
    
        public virtual int PProc_EngBuildVarientActivity(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngBuildVarientActivity", trIDParameter);
        }
    
        public virtual ObjectResult<PProc_EngLoadProductionActivity_Result> PProc_EngLoadProductionActivity(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngLoadProductionActivity_Result>("PProc_EngLoadProductionActivity", trIDParameter);
        }
    
        public virtual ObjectResult<PProc_EngLoadProductionEquipment_Result> PProc_EngLoadProductionEquipment(Nullable<int> trID, string startDateTime, string endDatetime)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            var startDateTimeParameter = startDateTime != null ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(string));
    
            var endDatetimeParameter = endDatetime != null ?
                new ObjectParameter("EndDatetime", endDatetime) :
                new ObjectParameter("EndDatetime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngLoadProductionEquipment_Result>("PProc_EngLoadProductionEquipment", trIDParameter, startDateTimeParameter, endDatetimeParameter);
        }
    
        public virtual ObjectResult<PProc_EngLoadProductionLabor_Result> PProc_EngLoadProductionLabor(Nullable<int> trID, string startDateTime, string endDatetime)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            var startDateTimeParameter = startDateTime != null ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(string));
    
            var endDatetimeParameter = endDatetime != null ?
                new ObjectParameter("EndDatetime", endDatetime) :
                new ObjectParameter("EndDatetime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngLoadProductionLabor_Result>("PProc_EngLoadProductionLabor", trIDParameter, startDateTimeParameter, endDatetimeParameter);
        }
    
        public virtual ObjectResult<PProc_EngMonitorScheduleLabour_Result> PProc_EngMonitorScheduleLabour(Nullable<int> clas, Nullable<int> eng, Nullable<int> proj, Nullable<int> phase, Nullable<int> sch, Nullable<int> cat, Nullable<int> stat)
        {
            var clasParameter = clas.HasValue ?
                new ObjectParameter("Clas", clas) :
                new ObjectParameter("Clas", typeof(int));
    
            var engParameter = eng.HasValue ?
                new ObjectParameter("eng", eng) :
                new ObjectParameter("eng", typeof(int));
    
            var projParameter = proj.HasValue ?
                new ObjectParameter("Proj", proj) :
                new ObjectParameter("Proj", typeof(int));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(int));
    
            var schParameter = sch.HasValue ?
                new ObjectParameter("sch", sch) :
                new ObjectParameter("sch", typeof(int));
    
            var catParameter = cat.HasValue ?
                new ObjectParameter("cat", cat) :
                new ObjectParameter("cat", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngMonitorScheduleLabour_Result>("PProc_EngMonitorScheduleLabour", clasParameter, engParameter, projParameter, phaseParameter, schParameter, catParameter, statParameter);
        }
    
        public virtual ObjectResult<PProc_EngMonitorScheduleLabourClass_Result> PProc_EngMonitorScheduleLabourClass(Nullable<int> clas, Nullable<int> eng, Nullable<int> proj, Nullable<int> phase, Nullable<int> sch)
        {
            var clasParameter = clas.HasValue ?
                new ObjectParameter("Clas", clas) :
                new ObjectParameter("Clas", typeof(int));
    
            var engParameter = eng.HasValue ?
                new ObjectParameter("eng", eng) :
                new ObjectParameter("eng", typeof(int));
    
            var projParameter = proj.HasValue ?
                new ObjectParameter("Proj", proj) :
                new ObjectParameter("Proj", typeof(int));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(int));
    
            var schParameter = sch.HasValue ?
                new ObjectParameter("sch", sch) :
                new ObjectParameter("sch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngMonitorScheduleLabourClass_Result>("PProc_EngMonitorScheduleLabourClass", clasParameter, engParameter, projParameter, phaseParameter, schParameter);
        }
    
        public virtual int PProc_EngProductionAuthorize(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngProductionAuthorize", trIDParameter);
        }
    
        public virtual int PProc_EngSubProductionAuthorize(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngSubProductionAuthorize", trIDParameter);
        }
    
        public virtual int PProc_EngSubServiceOrderApprove(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngSubServiceOrderApprove", trIDParameter);
        }
    
        public virtual int PProc_EngSubServiceOrderClose(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngSubServiceOrderClose", trIDParameter);
        }
    
        public virtual int PProc_EngWorkSchedualAuthorize(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngWorkSchedualAuthorize", trIDParameter);
        }
    
        public virtual int PProc_EngWorkSchedualUnAuthorize(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngWorkSchedualUnAuthorize", trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_Activity_Result> PProc_Prnt_def_Activity(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> actID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var actIDParameter = actID.HasValue ?
                new ObjectParameter("ActID", actID) :
                new ObjectParameter("ActID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_Activity_Result>("PProc_Prnt_def_Activity", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, actIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_Equipment_Result> PProc_Prnt_def_Equipment(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> catID, Nullable<int> bra, Nullable<int> active)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_Equipment_Result>("PProc_Prnt_def_Equipment", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, catIDParameter, braParameter, activeParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_EquipmentClass_Result> PProc_Prnt_def_EquipmentClass(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_EquipmentClass_Result>("PProc_Prnt_def_EquipmentClass", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_Expenses_Result> PProc_Prnt_def_Expenses(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_Expenses_Result>("PProc_Prnt_def_Expenses", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_Labor_Result> PProc_Prnt_def_Labor(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> classID, Nullable<int> catID, Nullable<int> bra, Nullable<int> active)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_Labor_Result>("PProc_Prnt_def_Labor", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, classIDParameter, catIDParameter, braParameter, activeParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_LaborClass_Result> PProc_Prnt_def_LaborClass(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_LaborClass_Result>("PProc_Prnt_def_LaborClass", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_Location_Result> PProc_Prnt_def_Location(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> bra)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_Location_Result>("PProc_Prnt_def_Location", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_SalesEngineer_Result> PProc_Prnt_def_SalesEngineer(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> catID, Nullable<int> bra, Nullable<int> active)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_SalesEngineer_Result>("PProc_Prnt_def_SalesEngineer", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, catIDParameter, braParameter, activeParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_SalesEngineerCategory_Result> PProc_Prnt_def_SalesEngineerCategory(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_SalesEngineerCategory_Result>("PProc_Prnt_def_SalesEngineerCategory", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_Scope_Result> PProc_Prnt_def_Scope(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_Scope_Result>("PProc_Prnt_def_Scope", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_SiteEngineer_Result> PProc_Prnt_def_SiteEngineer(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> catID, Nullable<int> bra, Nullable<int> active)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_SiteEngineer_Result>("PProc_Prnt_def_SiteEngineer", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, catIDParameter, braParameter, activeParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_SiteEngineerCategory_Result> PProc_Prnt_def_SiteEngineerCategory(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_SiteEngineerCategory_Result>("PProc_Prnt_def_SiteEngineerCategory", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_def_UnProdReason_Result> PProc_Prnt_def_UnProdReason(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_def_UnProdReason_Result>("PProc_Prnt_def_UnProdReason", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Eng_Budget_Result> PProc_Prnt_Eng_Budget(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> bra, Nullable<int> yearid, Nullable<int> monthCode, Nullable<int> engId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var yearidParameter = yearid.HasValue ?
                new ObjectParameter("Yearid", yearid) :
                new ObjectParameter("Yearid", typeof(int));
    
            var monthCodeParameter = monthCode.HasValue ?
                new ObjectParameter("MonthCode", monthCode) :
                new ObjectParameter("MonthCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Eng_Budget_Result>("PProc_Prnt_Eng_Budget", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braParameter, yearidParameter, monthCodeParameter, engIdParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Eng_Expenses_Result> PProc_Prnt_Eng_Expenses(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Eng_Expenses_Result>("PProc_Prnt_Eng_Expenses", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_eng_ServiceOrder_Result> PProc_Prnt_eng_ServiceOrder(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trNo)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trNoParameter = trNo.HasValue ?
                new ObjectParameter("TrNo", trNo) :
                new ObjectParameter("TrNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_eng_ServiceOrder_Result>("PProc_Prnt_eng_ServiceOrder", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trNoParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_eng_SubContContract_Result> PProc_Prnt_eng_SubContContract(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trNo)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trNoParameter = trNo.HasValue ?
                new ObjectParameter("TrNo", trNo) :
                new ObjectParameter("TrNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_eng_SubContContract_Result>("PProc_Prnt_eng_SubContContract", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trNoParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Eng_VariationDet_Result> PProc_Prnt_Eng_VariationDet(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Eng_VariationDet_Result>("PProc_Prnt_Eng_VariationDet", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Eng_VariationSum_Result> PProc_Prnt_Eng_VariationSum(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Eng_VariationSum_Result>("PProc_Prnt_Eng_VariationSum", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_EquipmentAssign_Result> PProc_Prnt_Res_EquipmentAssign(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_EquipmentAssign_Result>("PProc_Prnt_Res_EquipmentAssign", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_EquipmentRequest_Result> PProc_Prnt_Res_EquipmentRequest(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_EquipmentRequest_Result>("PProc_Prnt_Res_EquipmentRequest", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_LaborAbsenceLate_Result> PProc_Prnt_Res_LaborAbsenceLate(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_LaborAbsenceLate_Result>("PProc_Prnt_Res_LaborAbsenceLate", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_LaborAssign_Result> PProc_Prnt_Res_LaborAssign(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_LaborAssign_Result>("PProc_Prnt_Res_LaborAssign", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_LaborOverTime_Result> PProc_Prnt_Res_LaborOverTime(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_LaborOverTime_Result>("PProc_Prnt_Res_LaborOverTime", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_LaborRequest_Result> PProc_Prnt_Res_LaborRequest(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_LaborRequest_Result>("PProc_Prnt_Res_LaborRequest", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_Materialissue_Result> PProc_Prnt_Res_Materialissue(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_Materialissue_Result>("PProc_Prnt_Res_Materialissue", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_MaterialRequest_Result> PProc_Prnt_Res_MaterialRequest(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_MaterialRequest_Result>("PProc_Prnt_Res_MaterialRequest", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_Res_MaterialReturn_Result> PProc_Prnt_Res_MaterialReturn(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_Res_MaterialReturn_Result>("PProc_Prnt_Res_MaterialReturn", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_ActivityChangePRice_Result> PProc_Prnt_sls_ActivityChangePRice(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_ActivityChangePRice_Result>("PProc_Prnt_sls_ActivityChangePRice", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_Customercard_Result> PProc_Prnt_sls_Customercard(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> custid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var custidParameter = custid.HasValue ?
                new ObjectParameter("Custid", custid) :
                new ObjectParameter("Custid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_Customercard_Result>("PProc_Prnt_sls_Customercard", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, custidParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_CustomerList_Result> PProc_Prnt_sls_CustomerList(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> fromCustNo, Nullable<int> toCustNo, Nullable<int> catID, Nullable<int> engID, Nullable<int> bra, Nullable<int> active, Nullable<int> temp)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromCustNoParameter = fromCustNo.HasValue ?
                new ObjectParameter("FromCustNo", fromCustNo) :
                new ObjectParameter("FromCustNo", typeof(int));
    
            var toCustNoParameter = toCustNo.HasValue ?
                new ObjectParameter("ToCustNo", toCustNo) :
                new ObjectParameter("ToCustNo", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var engIDParameter = engID.HasValue ?
                new ObjectParameter("EngID", engID) :
                new ObjectParameter("EngID", typeof(int));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var tempParameter = temp.HasValue ?
                new ObjectParameter("Temp", temp) :
                new ObjectParameter("Temp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_CustomerList_Result>("PProc_Prnt_sls_CustomerList", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromCustNoParameter, toCustNoParameter, catIDParameter, engIDParameter, braParameter, activeParameter, tempParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_Itemcard_Result> PProc_Prnt_sls_Itemcard(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> itemId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_Itemcard_Result>("PProc_Prnt_sls_Itemcard", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, itemIdParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_ItemList_Result> PProc_Prnt_sls_ItemList(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromItemNo, string toItemNo, Nullable<int> scopeID, Nullable<int> active, Nullable<int> detail)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromItemNoParameter = fromItemNo != null ?
                new ObjectParameter("FromItemNo", fromItemNo) :
                new ObjectParameter("FromItemNo", typeof(string));
    
            var toItemNoParameter = toItemNo != null ?
                new ObjectParameter("ToItemNo", toItemNo) :
                new ObjectParameter("ToItemNo", typeof(string));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("ScopeID", scopeID) :
                new ObjectParameter("ScopeID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var detailParameter = detail.HasValue ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_ItemList_Result>("PProc_Prnt_sls_ItemList", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromItemNoParameter, toItemNoParameter, scopeIDParameter, activeParameter, detailParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_OfferSpecification_Result> PProc_Prnt_sls_OfferSpecification(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_OfferSpecification_Result>("PProc_Prnt_sls_OfferSpecification", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_OfferSubmittals_Result> PProc_Prnt_sls_OfferSubmittals(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> offerid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var offeridParameter = offerid.HasValue ?
                new ObjectParameter("Offerid", offerid) :
                new ObjectParameter("Offerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_OfferSubmittals_Result>("PProc_Prnt_sls_OfferSubmittals", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, offeridParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_WorkStart_Result> PProc_Prnt_sls_WorkStart(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_WorkStart_Result>("PProc_Prnt_sls_WorkStart", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_CollectiveWork_Result> PProc_Rep_DSS_CollectiveWork(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, string fromDate, string todate, Nullable<int> scopeCatID, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> groupType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_CollectiveWork_Result>("PProc_Rep_DSS_CollectiveWork", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, fromDateParameter, todateParameter, scopeCatIDParameter, catIDParameter, iSRepairParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_BudgetBranch_Result> PProc_Rep_Eng_BudgetBranch(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> yearID, Nullable<int> monid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("yearID", yearID) :
                new ObjectParameter("yearID", typeof(int));
    
            var monidParameter = monid.HasValue ?
                new ObjectParameter("Monid", monid) :
                new ObjectParameter("Monid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_BudgetBranch_Result>("PProc_Rep_Eng_BudgetBranch", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, yearIDParameter, monidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_BudgetCompany_Result> PProc_Rep_Eng_BudgetCompany(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> yearID, Nullable<int> monid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("yearID", yearID) :
                new ObjectParameter("yearID", typeof(int));
    
            var monidParameter = monid.HasValue ?
                new ObjectParameter("Monid", monid) :
                new ObjectParameter("Monid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_BudgetCompany_Result>("PProc_Rep_Eng_BudgetCompany", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, yearIDParameter, monidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_BudgetEngineer_Result> PProc_Rep_Eng_BudgetEngineer(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> yearID, Nullable<int> monid, Nullable<int> engId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("yearID", yearID) :
                new ObjectParameter("yearID", typeof(int));
    
            var monidParameter = monid.HasValue ?
                new ObjectParameter("Monid", monid) :
                new ObjectParameter("Monid", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_BudgetEngineer_Result>("PProc_Rep_Eng_BudgetEngineer", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, yearIDParameter, monidParameter, engIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_BudgetRequirement_Result> PProc_Rep_Eng_BudgetRequirement(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> yearID, Nullable<int> monid, Nullable<int> isLabor, Nullable<int> isEquip, Nullable<int> isMat)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var yearIDParameter = yearID.HasValue ?
                new ObjectParameter("yearID", yearID) :
                new ObjectParameter("yearID", typeof(int));
    
            var monidParameter = monid.HasValue ?
                new ObjectParameter("Monid", monid) :
                new ObjectParameter("Monid", typeof(int));
    
            var isLaborParameter = isLabor.HasValue ?
                new ObjectParameter("IsLabor", isLabor) :
                new ObjectParameter("IsLabor", typeof(int));
    
            var isEquipParameter = isEquip.HasValue ?
                new ObjectParameter("IsEquip", isEquip) :
                new ObjectParameter("IsEquip", typeof(int));
    
            var isMatParameter = isMat.HasValue ?
                new ObjectParameter("IsMat", isMat) :
                new ObjectParameter("IsMat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_BudgetRequirement_Result>("PProc_Rep_Eng_BudgetRequirement", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, yearIDParameter, monidParameter, isLaborParameter, isEquipParameter, isMatParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_ExpensesDetail_Result> PProc_Rep_Eng_ExpensesDetail(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> projId, Nullable<int> phaseId, Nullable<int> catID, Nullable<int> expId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("ProjId", projId) :
                new ObjectParameter("ProjId", typeof(int));
    
            var phaseIdParameter = phaseId.HasValue ?
                new ObjectParameter("PhaseId", phaseId) :
                new ObjectParameter("PhaseId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var expIdParameter = expId.HasValue ?
                new ObjectParameter("ExpId", expId) :
                new ObjectParameter("ExpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_ExpensesDetail_Result>("PProc_Rep_Eng_ExpensesDetail", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, projIdParameter, phaseIdParameter, catIDParameter, expIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_ExpensesSummary_Result> PProc_Rep_Eng_ExpensesSummary(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> projId, Nullable<int> phaseId, Nullable<int> catID, Nullable<int> expId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("ProjId", projId) :
                new ObjectParameter("ProjId", typeof(int));
    
            var phaseIdParameter = phaseId.HasValue ?
                new ObjectParameter("PhaseId", phaseId) :
                new ObjectParameter("PhaseId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var expIdParameter = expId.HasValue ?
                new ObjectParameter("ExpId", expId) :
                new ObjectParameter("ExpId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_ExpensesSummary_Result>("PProc_Rep_Eng_ExpensesSummary", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, projIdParameter, phaseIdParameter, catIDParameter, expIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_ProjectStatus_Result> PProc_Rep_Eng_ProjectStatus(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string toDate, Nullable<int> braCode, string fromProjectCode, string toProjectCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromProjectCodeParameter = fromProjectCode != null ?
                new ObjectParameter("FromProjectCode", fromProjectCode) :
                new ObjectParameter("FromProjectCode", typeof(string));
    
            var toProjectCodeParameter = toProjectCode != null ?
                new ObjectParameter("ToProjectCode", toProjectCode) :
                new ObjectParameter("ToProjectCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_ProjectStatus_Result>("PProc_Rep_Eng_ProjectStatus", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, toDateParameter, braCodeParameter, fromProjectCodeParameter, toProjectCodeParameter, engIdParameter, catIDParameter, custIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectBandFollow_Result> PProc_Rep_GRP_ProjectBandFollow(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> projId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("ProjId", projId) :
                new ObjectParameter("ProjId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectBandFollow_Result>("PProc_Rep_GRP_ProjectBandFollow", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, projIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectFollow_Result> PProc_Rep_GRP_ProjectFollow(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> fromproj, Nullable<int> toproj, Nullable<int> braCode, Nullable<int> engid, Nullable<int> catID, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromprojParameter = fromproj.HasValue ?
                new ObjectParameter("Fromproj", fromproj) :
                new ObjectParameter("Fromproj", typeof(int));
    
            var toprojParameter = toproj.HasValue ?
                new ObjectParameter("Toproj", toproj) :
                new ObjectParameter("Toproj", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engidParameter = engid.HasValue ?
                new ObjectParameter("Engid", engid) :
                new ObjectParameter("Engid", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectFollow_Result>("PProc_Rep_GRP_ProjectFollow", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, fromprojParameter, toprojParameter, braCodeParameter, engidParameter, catIDParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectWork_Result> PProc_Rep_GRP_ProjectWork(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> fromproj, Nullable<int> toproj, Nullable<int> braCode, Nullable<int> engId, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromprojParameter = fromproj.HasValue ?
                new ObjectParameter("Fromproj", fromproj) :
                new ObjectParameter("Fromproj", typeof(int));
    
            var toprojParameter = toproj.HasValue ?
                new ObjectParameter("Toproj", toproj) :
                new ObjectParameter("Toproj", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectWork_Result>("PProc_Rep_GRP_ProjectWork", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, fromprojParameter, toprojParameter, braCodeParameter, engIdParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, iSRepairParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_EquipmentMovement_Result> PProc_Rep_Res_EquipmentMovement(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> equipClassID, string fromEquipCode, string toEquipCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var equipClassIDParameter = equipClassID.HasValue ?
                new ObjectParameter("EquipClassID", equipClassID) :
                new ObjectParameter("EquipClassID", typeof(int));
    
            var fromEquipCodeParameter = fromEquipCode != null ?
                new ObjectParameter("FromEquipCode", fromEquipCode) :
                new ObjectParameter("FromEquipCode", typeof(string));
    
            var toEquipCodeParameter = toEquipCode != null ?
                new ObjectParameter("ToEquipCode", toEquipCode) :
                new ObjectParameter("ToEquipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_EquipmentMovement_Result>("PProc_Rep_Res_EquipmentMovement", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, equipClassIDParameter, fromEquipCodeParameter, toEquipCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_Equipmentwork_Result> PProc_Rep_Res_Equipmentwork(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> bra, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> scopeClassId, Nullable<int> scopeID, Nullable<int> equipClassID, string fromEquipCode, string toEquipCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            var equipClassIDParameter = equipClassID.HasValue ?
                new ObjectParameter("EquipClassID", equipClassID) :
                new ObjectParameter("EquipClassID", typeof(int));
    
            var fromEquipCodeParameter = fromEquipCode != null ?
                new ObjectParameter("FromEquipCode", fromEquipCode) :
                new ObjectParameter("FromEquipCode", typeof(string));
    
            var toEquipCodeParameter = toEquipCode != null ?
                new ObjectParameter("ToEquipCode", toEquipCode) :
                new ObjectParameter("ToEquipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_Equipmentwork_Result>("PProc_Rep_Res_Equipmentwork", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, scopeClassIdParameter, scopeIDParameter, equipClassIDParameter, fromEquipCodeParameter, toEquipCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_LabourAttendance_Result> PProc_Rep_Res_LabourAttendance(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_LabourAttendance_Result>("PProc_Rep_Res_LabourAttendance", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_LabourBounus_Result> PProc_Rep_Res_LabourBounus(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> bra, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> scopeClassId, Nullable<int> scopeID, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_LabourBounus_Result>("PProc_Rep_Res_LabourBounus", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, scopeClassIdParameter, scopeIDParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_Labourwork_Result> PProc_Rep_Res_Labourwork(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> bra, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> scopeClassId, Nullable<int> scopeID, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_Labourwork_Result>("PProc_Rep_Res_Labourwork", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, scopeClassIdParameter, scopeIDParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_MaterialUseItemDet_Result> PProc_Rep_Res_MaterialUseItemDet(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> itemId, Nullable<int> projID, Nullable<int> custClassID, Nullable<int> customerID, Nullable<int> scopeClassId, Nullable<int> scopeID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var custClassIDParameter = custClassID.HasValue ?
                new ObjectParameter("custClassID", custClassID) :
                new ObjectParameter("custClassID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_MaterialUseItemDet_Result>("PProc_Rep_Res_MaterialUseItemDet", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, itemIdParameter, projIDParameter, custClassIDParameter, customerIDParameter, scopeClassIdParameter, scopeIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_MaterialUseItemSum_Result> PProc_Rep_Res_MaterialUseItemSum(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> itemId, Nullable<int> projID, Nullable<int> custClassID, Nullable<int> customerID, Nullable<int> scopeClassId, Nullable<int> scopeID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var custClassIDParameter = custClassID.HasValue ?
                new ObjectParameter("custClassID", custClassID) :
                new ObjectParameter("custClassID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_MaterialUseItemSum_Result>("PProc_Rep_Res_MaterialUseItemSum", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, itemIdParameter, projIDParameter, custClassIDParameter, customerIDParameter, scopeClassIdParameter, scopeIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_MaterialUseProjectDet_Result> PProc_Rep_Res_MaterialUseProjectDet(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> itemId, Nullable<int> itemCatID, Nullable<int> projID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var itemCatIDParameter = itemCatID.HasValue ?
                new ObjectParameter("itemCatID", itemCatID) :
                new ObjectParameter("itemCatID", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_MaterialUseProjectDet_Result>("PProc_Rep_Res_MaterialUseProjectDet", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, itemIdParameter, itemCatIDParameter, projIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_MaterialUseProjectSum_Result> PProc_Rep_Res_MaterialUseProjectSum(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> itemId, Nullable<int> itemCatID, Nullable<int> projID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("itemId", itemId) :
                new ObjectParameter("itemId", typeof(int));
    
            var itemCatIDParameter = itemCatID.HasValue ?
                new ObjectParameter("itemCatID", itemCatID) :
                new ObjectParameter("itemCatID", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_MaterialUseProjectSum_Result>("PProc_Rep_Res_MaterialUseProjectSum", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, itemIdParameter, itemCatIDParameter, projIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_RequirmentItem_Result> PProc_Rep_Res_RequirmentItem(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> projID, Nullable<int> phaseID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_RequirmentItem_Result>("PProc_Rep_Res_RequirmentItem", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, projIDParameter, phaseIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_RequirmentPhase_Result> PProc_Rep_Res_RequirmentPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> projID, Nullable<int> phaseID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_RequirmentPhase_Result>("PProc_Rep_Res_RequirmentPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, projIDParameter, phaseIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_UnprodDetail_Result> PProc_Rep_Res_UnprodDetail(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engID, Nullable<int> custClassID, Nullable<int> customerID, Nullable<int> scopeClassId, Nullable<int> scopeID, Nullable<int> unProdId, Nullable<int> unprodCatID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIDParameter = engID.HasValue ?
                new ObjectParameter("EngID", engID) :
                new ObjectParameter("EngID", typeof(int));
    
            var custClassIDParameter = custClassID.HasValue ?
                new ObjectParameter("custClassID", custClassID) :
                new ObjectParameter("custClassID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            var unProdIdParameter = unProdId.HasValue ?
                new ObjectParameter("UnProdId", unProdId) :
                new ObjectParameter("UnProdId", typeof(int));
    
            var unprodCatIDParameter = unprodCatID.HasValue ?
                new ObjectParameter("UnprodCatID", unprodCatID) :
                new ObjectParameter("UnprodCatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_UnprodDetail_Result>("PProc_Rep_Res_UnprodDetail", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIDParameter, custClassIDParameter, customerIDParameter, scopeClassIdParameter, scopeIDParameter, unProdIdParameter, unprodCatIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_UnprodSum_Result> PProc_Rep_Res_UnprodSum(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engID, Nullable<int> custClassID, Nullable<int> customerID, Nullable<int> scopeClassId, Nullable<int> scopeID, Nullable<int> unProdId, Nullable<int> unprodCatID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIDParameter = engID.HasValue ?
                new ObjectParameter("EngID", engID) :
                new ObjectParameter("EngID", typeof(int));
    
            var custClassIDParameter = custClassID.HasValue ?
                new ObjectParameter("custClassID", custClassID) :
                new ObjectParameter("custClassID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var scopeClassIdParameter = scopeClassId.HasValue ?
                new ObjectParameter("scopeClassId", scopeClassId) :
                new ObjectParameter("scopeClassId", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("scopeID", scopeID) :
                new ObjectParameter("scopeID", typeof(int));
    
            var unProdIdParameter = unProdId.HasValue ?
                new ObjectParameter("UnProdId", unProdId) :
                new ObjectParameter("UnProdId", typeof(int));
    
            var unprodCatIDParameter = unprodCatID.HasValue ?
                new ObjectParameter("UnprodCatID", unprodCatID) :
                new ObjectParameter("UnprodCatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_UnprodSum_Result>("PProc_Rep_Res_UnprodSum", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIDParameter, custClassIDParameter, customerIDParameter, scopeClassIdParameter, scopeIDParameter, unProdIdParameter, unprodCatIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_EngineerActivity_Result> PProc_Rep_sls_EngineerActivity(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_EngineerActivity_Result>("PProc_Rep_sls_EngineerActivity", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, engIdParameter, catIDParameter, custIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_Production_Result> PProc_Rep_sls_Production(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_Production_Result>("PProc_Rep_sls_Production", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, catIDParameter, custIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_ProductionCustomer_Result> PProc_Rep_sls_ProductionCustomer(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_ProductionCustomer_Result>("PProc_Rep_sls_ProductionCustomer", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, catIDParameter, custIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_ProductionProject_Result> PProc_Rep_sls_ProductionProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_ProductionProject_Result>("PProc_Rep_sls_ProductionProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, catIDParameter, custIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_ActivityContract_Result> PProc_Rep_sub_ActivityContract(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrNo, Nullable<int> sono, Nullable<int> projectID, Nullable<int> phaseid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrNoParameter = contrNo.HasValue ?
                new ObjectParameter("ContrNo", contrNo) :
                new ObjectParameter("ContrNo", typeof(int));
    
            var sonoParameter = sono.HasValue ?
                new ObjectParameter("Sono", sono) :
                new ObjectParameter("Sono", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("Phaseid", phaseid) :
                new ObjectParameter("Phaseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_ActivityContract_Result>("PProc_Rep_sub_ActivityContract", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrNoParameter, sonoParameter, projectIDParameter, phaseidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_ActivityProduction_Result> PProc_Rep_sub_ActivityProduction(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrNo, Nullable<int> sono, Nullable<int> projectID, Nullable<int> phaseid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrNoParameter = contrNo.HasValue ?
                new ObjectParameter("ContrNo", contrNo) :
                new ObjectParameter("ContrNo", typeof(int));
    
            var sonoParameter = sono.HasValue ?
                new ObjectParameter("Sono", sono) :
                new ObjectParameter("Sono", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("Phaseid", phaseid) :
                new ObjectParameter("Phaseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_ActivityProduction_Result>("PProc_Rep_sub_ActivityProduction", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrNoParameter, sonoParameter, projectIDParameter, phaseidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_ActivityServiceOrder_Result> PProc_Rep_sub_ActivityServiceOrder(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrNo, Nullable<int> sono, Nullable<int> projectID, Nullable<int> phaseid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrNoParameter = contrNo.HasValue ?
                new ObjectParameter("ContrNo", contrNo) :
                new ObjectParameter("ContrNo", typeof(int));
    
            var sonoParameter = sono.HasValue ?
                new ObjectParameter("Sono", sono) :
                new ObjectParameter("Sono", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("Phaseid", phaseid) :
                new ObjectParameter("Phaseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_ActivityServiceOrder_Result>("PProc_Rep_sub_ActivityServiceOrder", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrNoParameter, sonoParameter, projectIDParameter, phaseidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_ProductionActivity_Result> PProc_Rep_sub_ProductionActivity(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrId, Nullable<int> soId, Nullable<int> projectID, Nullable<int> phaseid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrIdParameter = contrId.HasValue ?
                new ObjectParameter("ContrId", contrId) :
                new ObjectParameter("ContrId", typeof(int));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("Phaseid", phaseid) :
                new ObjectParameter("Phaseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_ProductionActivity_Result>("PProc_Rep_sub_ProductionActivity", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrIdParameter, soIdParameter, projectIDParameter, phaseidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_ProductionPhase_Result> PProc_Rep_sub_ProductionPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrId, Nullable<int> soId, Nullable<int> projectID, Nullable<int> phaseid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrIdParameter = contrId.HasValue ?
                new ObjectParameter("ContrId", contrId) :
                new ObjectParameter("ContrId", typeof(int));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("Phaseid", phaseid) :
                new ObjectParameter("Phaseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_ProductionPhase_Result>("PProc_Rep_sub_ProductionPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrIdParameter, soIdParameter, projectIDParameter, phaseidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_ProductionProject_Result> PProc_Rep_sub_ProductionProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrId, Nullable<int> soId, Nullable<int> projectID, Nullable<int> phaseid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrIdParameter = contrId.HasValue ?
                new ObjectParameter("ContrId", contrId) :
                new ObjectParameter("ContrId", typeof(int));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var phaseidParameter = phaseid.HasValue ?
                new ObjectParameter("Phaseid", phaseid) :
                new ObjectParameter("Phaseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_ProductionProject_Result>("PProc_Rep_sub_ProductionProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrIdParameter, soIdParameter, projectIDParameter, phaseidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_SubcontractList_Result> PProc_Rep_sub_SubcontractList(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromSubCode, string toSubCode, Nullable<int> scopeId, string fromEval, string toEval)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromSubCodeParameter = fromSubCode != null ?
                new ObjectParameter("FromSubCode", fromSubCode) :
                new ObjectParameter("FromSubCode", typeof(string));
    
            var toSubCodeParameter = toSubCode != null ?
                new ObjectParameter("ToSubCode", toSubCode) :
                new ObjectParameter("ToSubCode", typeof(string));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var fromEvalParameter = fromEval != null ?
                new ObjectParameter("FromEval", fromEval) :
                new ObjectParameter("FromEval", typeof(string));
    
            var toEvalParameter = toEval != null ?
                new ObjectParameter("toEval", toEval) :
                new ObjectParameter("toEval", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_SubcontractList_Result>("PProc_Rep_sub_SubcontractList", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromSubCodeParameter, toSubCodeParameter, scopeIdParameter, fromEvalParameter, toEvalParameter);
        }
    
        public virtual ObjectResult<PProc_ResGetMaterialissueReturn_Result> PProc_ResGetMaterialissueReturn(Nullable<int> schId, Nullable<int> soID)
        {
            var schIdParameter = schId.HasValue ?
                new ObjectParameter("SchId", schId) :
                new ObjectParameter("SchId", typeof(int));
    
            var soIDParameter = soID.HasValue ?
                new ObjectParameter("SoID", soID) :
                new ObjectParameter("SoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_ResGetMaterialissueReturn_Result>("PProc_ResGetMaterialissueReturn", schIdParameter, soIDParameter);
        }
    
        public virtual int PProc_ResProcessMaterialIssuance(Nullable<int> trid)
        {
            var tridParameter = trid.HasValue ?
                new ObjectParameter("Trid", trid) :
                new ObjectParameter("Trid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_ResProcessMaterialIssuance", tridParameter);
        }
    
        public virtual int PProc_ResProcessMaterialReturn(Nullable<int> trid)
        {
            var tridParameter = trid.HasValue ?
                new ObjectParameter("Trid", trid) :
                new ObjectParameter("Trid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_ResProcessMaterialReturn", tridParameter);
        }
    
        public virtual int PProc_Sales_InvoiceAuthorize(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Sales_InvoiceAuthorize", trIDParameter);
        }
    
        public virtual int PProc_Sales_OfferBuildActivity(Nullable<int> offerId)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Sales_OfferBuildActivity", offerIdParameter);
        }
    
        public virtual int PProc_Sales_OfferCopy(Nullable<int> offerId, Nullable<int> typ, ObjectParameter newOfferId)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Sales_OfferCopy", offerIdParameter, typParameter, newOfferId);
        }
    
        public virtual int PProc_Sales_OfferCostCalculation(Nullable<int> offerId)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Sales_OfferCostCalculation", offerIdParameter);
        }
    
        public virtual int PProc_Sales_OfferStartWork(Nullable<int> offerId)
        {
            var offerIdParameter = offerId.HasValue ?
                new ObjectParameter("OfferId", offerId) :
                new ObjectParameter("OfferId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Sales_OfferStartWork", offerIdParameter);
        }
    
        public virtual ObjectResult<PProc_Sales_Production_Result> PProc_Sales_Production(Nullable<int> projID, string dt)
        {
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var dtParameter = dt != null ?
                new ObjectParameter("dt", dt) :
                new ObjectParameter("dt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Sales_Production_Result>("PProc_Sales_Production", projIDParameter, dtParameter);
        }
    
        public virtual int PProc_SubcontractorApprove(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_SubcontractorApprove", idParameter);
        }
    
        public virtual int PProc_tol_GetMessage(Nullable<int> comp, Nullable<int> trTyp, Nullable<int> memid, Nullable<int> trid, ObjectParameter msgType, ObjectParameter hdMsg, ObjectParameter detMsg)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var trTypParameter = trTyp.HasValue ?
                new ObjectParameter("TrTyp", trTyp) :
                new ObjectParameter("TrTyp", typeof(int));
    
            var memidParameter = memid.HasValue ?
                new ObjectParameter("memid", memid) :
                new ObjectParameter("memid", typeof(int));
    
            var tridParameter = trid.HasValue ?
                new ObjectParameter("trid", trid) :
                new ObjectParameter("trid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_tol_GetMessage", compParameter, trTypParameter, memidParameter, tridParameter, msgType, hdMsg, detMsg);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int PProc_EngMonitorScheduleEquipment(Nullable<int> clas, Nullable<int> eng, Nullable<int> proj, Nullable<int> phase, Nullable<int> sch, Nullable<int> stat)
        {
            var clasParameter = clas.HasValue ?
                new ObjectParameter("Clas", clas) :
                new ObjectParameter("Clas", typeof(int));
    
            var engParameter = eng.HasValue ?
                new ObjectParameter("eng", eng) :
                new ObjectParameter("eng", typeof(int));
    
            var projParameter = proj.HasValue ?
                new ObjectParameter("Proj", proj) :
                new ObjectParameter("Proj", typeof(int));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(int));
    
            var schParameter = sch.HasValue ?
                new ObjectParameter("sch", sch) :
                new ObjectParameter("sch", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngMonitorScheduleEquipment", clasParameter, engParameter, projParameter, phaseParameter, schParameter, statParameter);
        }
    
        public virtual int PProc_EngMonitorScheduleEquipmentClass(Nullable<int> clas, Nullable<int> eng, Nullable<int> proj, Nullable<int> phase, Nullable<int> sch)
        {
            var clasParameter = clas.HasValue ?
                new ObjectParameter("Clas", clas) :
                new ObjectParameter("Clas", typeof(int));
    
            var engParameter = eng.HasValue ?
                new ObjectParameter("eng", eng) :
                new ObjectParameter("eng", typeof(int));
    
            var projParameter = proj.HasValue ?
                new ObjectParameter("Proj", proj) :
                new ObjectParameter("Proj", typeof(int));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(int));
    
            var schParameter = sch.HasValue ?
                new ObjectParameter("sch", sch) :
                new ObjectParameter("sch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngMonitorScheduleEquipmentClass", clasParameter, engParameter, projParameter, phaseParameter, schParameter);
        }
    
        public virtual ObjectResult<PProc_EngMonitorScheduleEquip_Result> PProc_EngMonitorScheduleEquip(Nullable<int> clas, Nullable<int> eng, Nullable<int> proj, Nullable<int> phase, Nullable<int> sch, Nullable<int> stat)
        {
            var clasParameter = clas.HasValue ?
                new ObjectParameter("Clas", clas) :
                new ObjectParameter("Clas", typeof(int));
    
            var engParameter = eng.HasValue ?
                new ObjectParameter("eng", eng) :
                new ObjectParameter("eng", typeof(int));
    
            var projParameter = proj.HasValue ?
                new ObjectParameter("Proj", proj) :
                new ObjectParameter("Proj", typeof(int));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(int));
    
            var schParameter = sch.HasValue ?
                new ObjectParameter("sch", sch) :
                new ObjectParameter("sch", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("stat", stat) :
                new ObjectParameter("stat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngMonitorScheduleEquip_Result>("PProc_EngMonitorScheduleEquip", clasParameter, engParameter, projParameter, phaseParameter, schParameter, statParameter);
        }
    
        public virtual ObjectResult<PProc_EngMonitorScheduleEquipClass_Result> PProc_EngMonitorScheduleEquipClass(Nullable<int> clas, Nullable<int> eng, Nullable<int> proj, Nullable<int> phase, Nullable<int> sch)
        {
            var clasParameter = clas.HasValue ?
                new ObjectParameter("Clas", clas) :
                new ObjectParameter("Clas", typeof(int));
    
            var engParameter = eng.HasValue ?
                new ObjectParameter("eng", eng) :
                new ObjectParameter("eng", typeof(int));
    
            var projParameter = proj.HasValue ?
                new ObjectParameter("Proj", proj) :
                new ObjectParameter("Proj", typeof(int));
    
            var phaseParameter = phase.HasValue ?
                new ObjectParameter("phase", phase) :
                new ObjectParameter("phase", typeof(int));
    
            var schParameter = sch.HasValue ?
                new ObjectParameter("sch", sch) :
                new ObjectParameter("sch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngMonitorScheduleEquipClass_Result>("PProc_EngMonitorScheduleEquipClass", clasParameter, engParameter, projParameter, phaseParameter, schParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_eng_OpProductionEntry_Result> PProc_Prnt_eng_OpProductionEntry(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trNo)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trNoParameter = trNo.HasValue ?
                new ObjectParameter("TrNo", trNo) :
                new ObjectParameter("TrNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_eng_OpProductionEntry_Result>("PProc_Prnt_eng_OpProductionEntry", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trNoParameter);
        }
    
        public virtual int PProc_EngSubBuildSODetail(Nullable<int> soId)
        {
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("soId", soId) :
                new ObjectParameter("soId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngSubBuildSODetail", soIdParameter);
        }
    
        public virtual int PProc_Sales_FillInvoiceDetail(Nullable<int> trno)
        {
            var trnoParameter = trno.HasValue ?
                new ObjectParameter("trno", trno) :
                new ObjectParameter("trno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Sales_FillInvoiceDetail", trnoParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_RequirmentProject_Result> PProc_Rep_Res_RequirmentProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> projID, Nullable<int> phaseID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_RequirmentProject_Result>("PProc_Rep_Res_RequirmentProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, projIDParameter, phaseIDParameter);
        }
    
        public virtual ObjectResult<PProc_ResGetFreeEquip_Result> PProc_ResGetFreeEquip(Nullable<int> bra, string fromDate, string toDate, Nullable<int> classid)
        {
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var classidParameter = classid.HasValue ?
                new ObjectParameter("Classid", classid) :
                new ObjectParameter("Classid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_ResGetFreeEquip_Result>("PProc_ResGetFreeEquip", braParameter, fromDateParameter, toDateParameter, classidParameter);
        }
    
        public virtual ObjectResult<PProc_ResGetFreeLabor_Result> PProc_ResGetFreeLabor(Nullable<int> bra, string fromDate, string toDate, Nullable<int> classid, Nullable<int> catid)
        {
            var braParameter = bra.HasValue ?
                new ObjectParameter("bra", bra) :
                new ObjectParameter("bra", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var classidParameter = classid.HasValue ?
                new ObjectParameter("Classid", classid) :
                new ObjectParameter("Classid", typeof(int));
    
            var catidParameter = catid.HasValue ?
                new ObjectParameter("Catid", catid) :
                new ObjectParameter("Catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_ResGetFreeLabor_Result>("PProc_ResGetFreeLabor", braParameter, fromDateParameter, toDateParameter, classidParameter, catidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_LabourMovementByProject_Result> PProc_Rep_Res_LabourMovementByProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode, Nullable<int> engid, Nullable<int> projID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            var engidParameter = engid.HasValue ?
                new ObjectParameter("Engid", engid) :
                new ObjectParameter("Engid", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_LabourMovementByProject_Result>("PProc_Rep_Res_LabourMovementByProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter, engidParameter, projIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_ProductionVSBilling_Result> PProc_Rep_sls_ProductionVSBilling(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_ProductionVSBilling_Result>("PProc_Rep_sls_ProductionVSBilling", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, catIDParameter, custIdParameter);
        }
    
        public virtual int PMS_ESS_integration(Nullable<int> typ)
        {
            var typParameter = typ.HasValue ?
                new ObjectParameter("typ", typ) :
                new ObjectParameter("typ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PMS_ESS_integration", typParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_Evaluation_Result> PProc_Rep_sub_Evaluation(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrId, Nullable<int> projectID, Nullable<int> engId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrIdParameter = contrId.HasValue ?
                new ObjectParameter("ContrId", contrId) :
                new ObjectParameter("ContrId", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_Evaluation_Result>("PProc_Rep_sub_Evaluation", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrIdParameter, projectIDParameter, engIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sub_EvaluationScope_Result> PProc_Rep_sub_EvaluationScope(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> subID, Nullable<int> contrId, Nullable<int> projectID, Nullable<int> engId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var subIDParameter = subID.HasValue ?
                new ObjectParameter("SubID", subID) :
                new ObjectParameter("SubID", typeof(int));
    
            var contrIdParameter = contrId.HasValue ?
                new ObjectParameter("ContrId", contrId) :
                new ObjectParameter("ContrId", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sub_EvaluationScope_Result>("PProc_Rep_sub_EvaluationScope", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, subIDParameter, contrIdParameter, projectIDParameter, engIdParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_Production_Result> PProc_Prnt_sls_Production(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_Production_Result>("PProc_Prnt_sls_Production", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectCostByPhase_Result> PProc_Rep_GRP_ProjectCostByPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectCostByPhase_Result>("PProc_Rep_GRP_ProjectCostByPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectCostByProject_Result> PProc_Rep_GRP_ProjectCostByProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectCostByProject_Result>("PProc_Rep_GRP_ProjectCostByProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_LabourFree_Result> PProc_Rep_Res_LabourFree(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_LabourFree_Result>("PProc_Rep_Res_LabourFree", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_ProjectItemStock_Result> PProc_Rep_sls_ProjectItemStock(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> prjid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var prjidParameter = prjid.HasValue ?
                new ObjectParameter("Prjid", prjid) :
                new ObjectParameter("Prjid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_ProjectItemStock_Result>("PProc_Rep_sls_ProjectItemStock", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, prjidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectCostVarianceByPhase_Result> PProc_Rep_GRP_ProjectCostVarianceByPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectCostVarianceByPhase_Result>("PProc_Rep_GRP_ProjectCostVarianceByPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectCostVarianceByProject_Result> PProc_Rep_GRP_ProjectCostVarianceByProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectCostVarianceByProject_Result>("PProc_Rep_GRP_ProjectCostVarianceByProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectLabEquipVarianceByPhase_Result> PProc_Rep_GRP_ProjectLabEquipVarianceByPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectLabEquipVarianceByPhase_Result>("PProc_Rep_GRP_ProjectLabEquipVarianceByPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectLabEquipVarianceByProject_Result> PProc_Rep_GRP_ProjectLabEquipVarianceByProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectLabEquipVarianceByProject_Result>("PProc_Rep_GRP_ProjectLabEquipVarianceByProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_DistributionArea_Result> PProc_Rep_GRP_DistributionArea(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_DistributionArea_Result>("PProc_Rep_GRP_DistributionArea", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, engIdParameter, catIDParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_DistributionPaseByEngineer_Result> PProc_Rep_GRP_DistributionPaseByEngineer(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> engId, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_DistributionPaseByEngineer_Result>("PProc_Rep_GRP_DistributionPaseByEngineer", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, engIdParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, iSRepairParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_DistributionPaseByScope_Result> PProc_Rep_GRP_DistributionPaseByScope(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> engId, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_DistributionPaseByScope_Result>("PProc_Rep_GRP_DistributionPaseByScope", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, engIdParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, iSRepairParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_DistributionProject_Result> PProc_Rep_GRP_DistributionProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_DistributionProject_Result>("PProc_Rep_GRP_DistributionProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, engIdParameter, catIDParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_ProgressActivity_Result> PProc_Rep_Eng_ProgressActivity(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> projId, Nullable<int> phaseId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("ProjId", projId) :
                new ObjectParameter("ProjId", typeof(int));
    
            var phaseIdParameter = phaseId.HasValue ?
                new ObjectParameter("PhaseId", phaseId) :
                new ObjectParameter("PhaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_ProgressActivity_Result>("PProc_Rep_Eng_ProgressActivity", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, projIdParameter, phaseIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Eng_ProgressItem_Result> PProc_Rep_Eng_ProgressItem(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> projId, Nullable<int> phaseId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIdParameter = projId.HasValue ?
                new ObjectParameter("ProjId", projId) :
                new ObjectParameter("ProjId", typeof(int));
    
            var phaseIdParameter = phaseId.HasValue ?
                new ObjectParameter("PhaseId", phaseId) :
                new ObjectParameter("PhaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Eng_ProgressItem_Result>("PProc_Rep_Eng_ProgressItem", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, projIdParameter, phaseIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_ProjectEvaluation_Result> PProc_Rep_DSS_ProjectEvaluation(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, Nullable<int> braCode, string fromDate, string todate, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> groupType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_ProjectEvaluation_Result>("PProc_Rep_DSS_ProjectEvaluation", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, braCodeParameter, fromDateParameter, todateParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, iSRepairParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_SubContractorWorkDetail_Result> PProc_Rep_DSS_SubContractorWorkDetail(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, string fromDate, string todate, Nullable<int> scopeCatID, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> groupType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_SubContractorWorkDetail_Result>("PProc_Rep_DSS_SubContractorWorkDetail", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, fromDateParameter, todateParameter, scopeCatIDParameter, catIDParameter, iSRepairParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_SubContractorWorkSummary_Result> PProc_Rep_DSS_SubContractorWorkSummary(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, string fromDate, string todate, Nullable<int> scopeCatID, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> groupType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_SubContractorWorkSummary_Result>("PProc_Rep_DSS_SubContractorWorkSummary", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, fromDateParameter, todateParameter, scopeCatIDParameter, catIDParameter, iSRepairParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_BillingBranch_Result> PProc_Rep_DSS_BillingBranch(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, Nullable<int> catID, Nullable<int> scopeCatID, Nullable<int> scopeID, Nullable<int> iSRepair, Nullable<int> yearid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("ScopeID", scopeID) :
                new ObjectParameter("ScopeID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var yearidParameter = yearid.HasValue ?
                new ObjectParameter("yearid", yearid) :
                new ObjectParameter("yearid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_BillingBranch_Result>("PProc_Rep_DSS_BillingBranch", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, catIDParameter, scopeCatIDParameter, scopeIDParameter, iSRepairParameter, yearidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_ProductionBranch_Result> PProc_Rep_DSS_ProductionBranch(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, Nullable<int> catID, Nullable<int> scopeCatID, Nullable<int> scopeID, Nullable<int> iSRepair, Nullable<int> yearid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("ScopeID", scopeID) :
                new ObjectParameter("ScopeID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var yearidParameter = yearid.HasValue ?
                new ObjectParameter("yearid", yearid) :
                new ObjectParameter("yearid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_ProductionBranch_Result>("PProc_Rep_DSS_ProductionBranch", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, catIDParameter, scopeCatIDParameter, scopeIDParameter, iSRepairParameter, yearidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_SalesBranch_Result> PProc_Rep_DSS_SalesBranch(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, Nullable<int> catID, Nullable<int> yearid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var yearidParameter = yearid.HasValue ?
                new ObjectParameter("yearid", yearid) :
                new ObjectParameter("yearid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_SalesBranch_Result>("PProc_Rep_DSS_SalesBranch", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, catIDParameter, yearidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_Offer_Result> PProc_Rep_sls_Offer(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> locId, Nullable<int> stat)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var locIdParameter = locId.HasValue ?
                new ObjectParameter("LocId", locId) :
                new ObjectParameter("LocId", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("Stat", stat) :
                new ObjectParameter("Stat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_Offer_Result>("PProc_Rep_sls_Offer", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, engIdParameter, catIDParameter, custIdParameter, locIdParameter, statParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_MeterialCoverageItem_Result> PProc_Rep_GRP_MeterialCoverageItem(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, string fromItem, string toItem, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var fromItemParameter = fromItem != null ?
                new ObjectParameter("FromItem", fromItem) :
                new ObjectParameter("FromItem", typeof(string));
    
            var toItemParameter = toItem != null ?
                new ObjectParameter("ToItem", toItem) :
                new ObjectParameter("ToItem", typeof(string));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_MeterialCoverageItem_Result>("PProc_Rep_GRP_MeterialCoverageItem", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, fromItemParameter, toItemParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_MeterialCoveragePhase_Result> PProc_Rep_GRP_MeterialCoveragePhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, string fromItem, string toItem, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var fromItemParameter = fromItem != null ?
                new ObjectParameter("FromItem", fromItem) :
                new ObjectParameter("FromItem", typeof(string));
    
            var toItemParameter = toItem != null ?
                new ObjectParameter("ToItem", toItem) :
                new ObjectParameter("ToItem", typeof(string));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_MeterialCoveragePhase_Result>("PProc_Rep_GRP_MeterialCoveragePhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, fromItemParameter, toItemParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter);
        }
    
        public virtual int PProc_EngWorkSchedualReopen(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_EngWorkSchedualReopen", trIDParameter);
        }
    
        public virtual int PProc_Eng_ServiceOrderReopen(Nullable<int> trID)
        {
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PProc_Eng_ServiceOrderReopen", trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_LabourEvaluationByProject_Result> PProc_Rep_GRP_LabourEvaluationByProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> engid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var engidParameter = engid.HasValue ?
                new ObjectParameter("Engid", engid) :
                new ObjectParameter("Engid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_LabourEvaluationByProject_Result>("PProc_Rep_GRP_LabourEvaluationByProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter, fromProjParameter, toProjParameter, engidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_LabourMovement_Result> PProc_Rep_Res_LabourMovement(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> labClassID, Nullable<int> labCatID, string fromLabCode, string toLabCode)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("braCode", braCode) :
                new ObjectParameter("braCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var labClassIDParameter = labClassID.HasValue ?
                new ObjectParameter("LabClassID", labClassID) :
                new ObjectParameter("LabClassID", typeof(int));
    
            var labCatIDParameter = labCatID.HasValue ?
                new ObjectParameter("LabCatID", labCatID) :
                new ObjectParameter("LabCatID", typeof(int));
    
            var fromLabCodeParameter = fromLabCode != null ?
                new ObjectParameter("FromLabCode", fromLabCode) :
                new ObjectParameter("FromLabCode", typeof(string));
    
            var toLabCodeParameter = toLabCode != null ?
                new ObjectParameter("ToLabCode", toLabCode) :
                new ObjectParameter("ToLabCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_LabourMovement_Result>("PProc_Rep_Res_LabourMovement", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, labClassIDParameter, labCatIDParameter, fromLabCodeParameter, toLabCodeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_MaterialUseSumMaterial_Result> PProc_Rep_Res_MaterialUseSumMaterial(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> projID, Nullable<int> phaseID, Nullable<int> engID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            var engIDParameter = engID.HasValue ?
                new ObjectParameter("EngID", engID) :
                new ObjectParameter("EngID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_MaterialUseSumMaterial_Result>("PProc_Rep_Res_MaterialUseSumMaterial", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, projIDParameter, phaseIDParameter, engIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_Res_MaterialUseSumTrans_Result> PProc_Rep_Res_MaterialUseSumTrans(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> projID, Nullable<int> phaseID, Nullable<int> engID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("ProjID", projID) :
                new ObjectParameter("ProjID", typeof(int));
    
            var phaseIDParameter = phaseID.HasValue ?
                new ObjectParameter("PhaseID", phaseID) :
                new ObjectParameter("PhaseID", typeof(int));
    
            var engIDParameter = engID.HasValue ?
                new ObjectParameter("EngID", engID) :
                new ObjectParameter("EngID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_Res_MaterialUseSumTrans_Result>("PProc_Rep_Res_MaterialUseSumTrans", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, projIDParameter, phaseIDParameter, engIDParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_ProjectEvaluationproject_Result> PProc_Rep_DSS_ProjectEvaluationproject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, Nullable<int> braCode, string fromDate, string todate, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> groupType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_ProjectEvaluationproject_Result>("PProc_Rep_DSS_ProjectEvaluationproject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, braCodeParameter, fromDateParameter, todateParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, iSRepairParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_ProjectPhaseEvaluation_Result> PProc_Rep_DSS_ProjectPhaseEvaluation(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> regionCode, Nullable<int> braCode, string fromDate, string todate, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> iSRepair, Nullable<int> groupType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var groupTypeParameter = groupType.HasValue ?
                new ObjectParameter("GroupType", groupType) :
                new ObjectParameter("GroupType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_ProjectPhaseEvaluation_Result>("PProc_Rep_DSS_ProjectPhaseEvaluation", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, regionCodeParameter, braCodeParameter, fromDateParameter, todateParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, iSRepairParameter, groupTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_SalesEngineerBonus_Result> PProc_Rep_GRP_SalesEngineerBonus(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> yearNo, Nullable<int> monthNo, Nullable<int> toMonthNo, Nullable<int> siteEngCatid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var yearNoParameter = yearNo.HasValue ?
                new ObjectParameter("YearNo", yearNo) :
                new ObjectParameter("YearNo", typeof(int));
    
            var monthNoParameter = monthNo.HasValue ?
                new ObjectParameter("MonthNo", monthNo) :
                new ObjectParameter("MonthNo", typeof(int));
    
            var toMonthNoParameter = toMonthNo.HasValue ?
                new ObjectParameter("toMonthNo", toMonthNo) :
                new ObjectParameter("toMonthNo", typeof(int));
    
            var siteEngCatidParameter = siteEngCatid.HasValue ?
                new ObjectParameter("SiteEngCatid", siteEngCatid) :
                new ObjectParameter("SiteEngCatid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_SalesEngineerBonus_Result>("PProc_Rep_GRP_SalesEngineerBonus", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, yearNoParameter, monthNoParameter, toMonthNoParameter, siteEngCatidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_SiteEngineerBonus_Result> PProc_Rep_GRP_SiteEngineerBonus(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, Nullable<int> yearNo, Nullable<int> monthNo, Nullable<int> siteEngCatid)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var yearNoParameter = yearNo.HasValue ?
                new ObjectParameter("YearNo", yearNo) :
                new ObjectParameter("YearNo", typeof(int));
    
            var monthNoParameter = monthNo.HasValue ?
                new ObjectParameter("MonthNo", monthNo) :
                new ObjectParameter("MonthNo", typeof(int));
    
            var siteEngCatidParameter = siteEngCatid.HasValue ?
                new ObjectParameter("SiteEngCatid", siteEngCatid) :
                new ObjectParameter("SiteEngCatid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_SiteEngineerBonus_Result>("PProc_Rep_GRP_SiteEngineerBonus", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, yearNoParameter, monthNoParameter, siteEngCatidParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_BillingByinvoice_Result> PProc_Rep_sls_BillingByinvoice(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> locId, Nullable<int> stat)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var locIdParameter = locId.HasValue ?
                new ObjectParameter("LocId", locId) :
                new ObjectParameter("LocId", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("Stat", stat) :
                new ObjectParameter("Stat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_BillingByinvoice_Result>("PProc_Rep_sls_BillingByinvoice", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, engIdParameter, catIDParameter, custIdParameter, locIdParameter, statParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_BillingByPhase_Result> PProc_Rep_sls_BillingByPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> locId, Nullable<int> stat)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var locIdParameter = locId.HasValue ?
                new ObjectParameter("LocId", locId) :
                new ObjectParameter("LocId", typeof(int));
    
            var statParameter = stat.HasValue ?
                new ObjectParameter("Stat", stat) :
                new ObjectParameter("Stat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_BillingByPhase_Result>("PProc_Rep_sls_BillingByPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, engIdParameter, catIDParameter, custIdParameter, locIdParameter, statParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_Contract_Result> PProc_Rep_sls_Contract(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, string fromDate, string toDate, Nullable<int> braCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> locId)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var locIdParameter = locId.HasValue ?
                new ObjectParameter("LocId", locId) :
                new ObjectParameter("LocId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_Contract_Result>("PProc_Rep_sls_Contract", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, fromDateParameter, toDateParameter, braCodeParameter, engIdParameter, catIDParameter, custIdParameter, locIdParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_eng_SubProduction_Result> PProc_Prnt_eng_SubProduction(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trNo)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trNoParameter = trNo.HasValue ?
                new ObjectParameter("TrNo", trNo) :
                new ObjectParameter("TrNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_eng_SubProduction_Result>("PProc_Prnt_eng_SubProduction", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trNoParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectEvaluationByPhase_Result> PProc_Rep_GRP_ProjectEvaluationByPhase(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero, Nullable<int> iSRepair, Nullable<int> prodType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var prodTypeParameter = prodType.HasValue ?
                new ObjectParameter("ProdType", prodType) :
                new ObjectParameter("ProdType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectEvaluationByPhase_Result>("PProc_Rep_GRP_ProjectEvaluationByPhase", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter, iSRepairParameter, prodTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_GRP_ProjectEvaluationByProject_Result> PProc_Rep_GRP_ProjectEvaluationByProject(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string todate, Nullable<int> fromProj, Nullable<int> toProj, Nullable<int> siteEngid, Nullable<int> scopeCatID, Nullable<int> scopeId, Nullable<int> catID, Nullable<int> custId, Nullable<int> status, Nullable<int> isExecludeZero, Nullable<int> iSRepair, Nullable<int> prodType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var fromProjParameter = fromProj.HasValue ?
                new ObjectParameter("FromProj", fromProj) :
                new ObjectParameter("FromProj", typeof(int));
    
            var toProjParameter = toProj.HasValue ?
                new ObjectParameter("ToProj", toProj) :
                new ObjectParameter("ToProj", typeof(int));
    
            var siteEngidParameter = siteEngid.HasValue ?
                new ObjectParameter("SiteEngid", siteEngid) :
                new ObjectParameter("SiteEngid", typeof(int));
    
            var scopeCatIDParameter = scopeCatID.HasValue ?
                new ObjectParameter("ScopeCatID", scopeCatID) :
                new ObjectParameter("ScopeCatID", typeof(int));
    
            var scopeIdParameter = scopeId.HasValue ?
                new ObjectParameter("ScopeId", scopeId) :
                new ObjectParameter("ScopeId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var isExecludeZeroParameter = isExecludeZero.HasValue ?
                new ObjectParameter("IsExecludeZero", isExecludeZero) :
                new ObjectParameter("IsExecludeZero", typeof(int));
    
            var iSRepairParameter = iSRepair.HasValue ?
                new ObjectParameter("ISRepair", iSRepair) :
                new ObjectParameter("ISRepair", typeof(int));
    
            var prodTypeParameter = prodType.HasValue ?
                new ObjectParameter("ProdType", prodType) :
                new ObjectParameter("ProdType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_GRP_ProjectEvaluationByProject_Result>("PProc_Rep_GRP_ProjectEvaluationByProject", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, todateParameter, fromProjParameter, toProjParameter, siteEngidParameter, scopeCatIDParameter, scopeIdParameter, catIDParameter, custIdParameter, statusParameter, isExecludeZeroParameter, iSRepairParameter, prodTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_eng_WorkSchedule_Result> PProc_Prnt_eng_WorkSchedule(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trNo)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trNoParameter = trNo.HasValue ?
                new ObjectParameter("TrNo", trNo) :
                new ObjectParameter("TrNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_eng_WorkSchedule_Result>("PProc_Prnt_eng_WorkSchedule", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trNoParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_DSS_BillingStatus_Result> PProc_Rep_DSS_BillingStatus(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> repType, Nullable<int> regionCode, Nullable<int> braCode, string fromDate, string todate)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            var regionCodeParameter = regionCode.HasValue ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(int));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_DSS_BillingStatus_Result>("PProc_Rep_DSS_BillingStatus", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, repTypeParameter, regionCodeParameter, braCodeParameter, fromDateParameter, todateParameter);
        }
    
        public virtual ObjectResult<PProc_EngVariationLoadItem_Result> PProc_EngVariationLoadItem(Nullable<int> projectPhaseItemId)
        {
            var projectPhaseItemIdParameter = projectPhaseItemId.HasValue ?
                new ObjectParameter("ProjectPhaseItemId", projectPhaseItemId) :
                new ObjectParameter("ProjectPhaseItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_EngVariationLoadItem_Result>("PProc_EngVariationLoadItem", projectPhaseItemIdParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_eng_ProductionVSPRogress_Result> PProc_Rep_eng_ProductionVSPRogress(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> bra, string fromdate, string todate, Nullable<int> engId, Nullable<int> slsEngID, Nullable<int> repType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braParameter = bra.HasValue ?
                new ObjectParameter("Bra", bra) :
                new ObjectParameter("Bra", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("Fromdate", fromdate) :
                new ObjectParameter("Fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("Todate", todate) :
                new ObjectParameter("Todate", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var slsEngIDParameter = slsEngID.HasValue ?
                new ObjectParameter("SlsEngID", slsEngID) :
                new ObjectParameter("SlsEngID", typeof(int));
    
            var repTypeParameter = repType.HasValue ?
                new ObjectParameter("RepType", repType) :
                new ObjectParameter("RepType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_eng_ProductionVSPRogress_Result>("PProc_Rep_eng_ProductionVSPRogress", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braParameter, fromdateParameter, todateParameter, engIdParameter, slsEngIDParameter, repTypeParameter);
        }
    
        public virtual int PPrc_MonthClose(Nullable<int> periodID, ObjectParameter tot)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PPrc_MonthClose", periodIDParameter, tot);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_CRM_Result> PProc_Rep_sls_CRM(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, Nullable<int> engId, Nullable<int> custId, Nullable<int> prodType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("engId", engId) :
                new ObjectParameter("engId", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var prodTypeParameter = prodType.HasValue ?
                new ObjectParameter("ProdType", prodType) :
                new ObjectParameter("ProdType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_CRM_Result>("PProc_Rep_sls_CRM", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, engIdParameter, custIdParameter, prodTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Rep_sls_invoices_Result> PProc_Rep_sls_invoices(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> braCode, string fromDate, string toDate, string fromProjCode, string toProjCode, Nullable<int> engId, Nullable<int> catID, Nullable<int> custId, Nullable<int> invType)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var braCodeParameter = braCode.HasValue ?
                new ObjectParameter("BraCode", braCode) :
                new ObjectParameter("BraCode", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            var fromProjCodeParameter = fromProjCode != null ?
                new ObjectParameter("FromProjCode", fromProjCode) :
                new ObjectParameter("FromProjCode", typeof(string));
    
            var toProjCodeParameter = toProjCode != null ?
                new ObjectParameter("ToProjCode", toProjCode) :
                new ObjectParameter("ToProjCode", typeof(string));
    
            var engIdParameter = engId.HasValue ?
                new ObjectParameter("EngId", engId) :
                new ObjectParameter("EngId", typeof(int));
    
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            var custIdParameter = custId.HasValue ?
                new ObjectParameter("CustId", custId) :
                new ObjectParameter("CustId", typeof(int));
    
            var invTypeParameter = invType.HasValue ?
                new ObjectParameter("InvType", invType) :
                new ObjectParameter("InvType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Rep_sls_invoices_Result>("PProc_Rep_sls_invoices", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, braCodeParameter, fromDateParameter, toDateParameter, fromProjCodeParameter, toProjCodeParameter, engIdParameter, catIDParameter, custIdParameter, invTypeParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_Invoice_Result> PProc_Prnt_sls_Invoice(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_Invoice_Result>("PProc_Prnt_sls_Invoice", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    
        public virtual ObjectResult<PProc_Prnt_sls_DbCr_Result> PProc_Prnt_sls_DbCr(Nullable<int> comp, string compNameA, string compNameE, string braNameA, string braNameE, string loginUser, Nullable<int> trID)
        {
            var compParameter = comp.HasValue ?
                new ObjectParameter("comp", comp) :
                new ObjectParameter("comp", typeof(int));
    
            var compNameAParameter = compNameA != null ?
                new ObjectParameter("CompNameA", compNameA) :
                new ObjectParameter("CompNameA", typeof(string));
    
            var compNameEParameter = compNameE != null ?
                new ObjectParameter("CompNameE", compNameE) :
                new ObjectParameter("CompNameE", typeof(string));
    
            var braNameAParameter = braNameA != null ?
                new ObjectParameter("BraNameA", braNameA) :
                new ObjectParameter("BraNameA", typeof(string));
    
            var braNameEParameter = braNameE != null ?
                new ObjectParameter("BraNameE", braNameE) :
                new ObjectParameter("BraNameE", typeof(string));
    
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var trIDParameter = trID.HasValue ?
                new ObjectParameter("TrID", trID) :
                new ObjectParameter("TrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PProc_Prnt_sls_DbCr_Result>("PProc_Prnt_sls_DbCr", compParameter, compNameAParameter, compNameEParameter, braNameAParameter, braNameEParameter, loginUserParameter, trIDParameter);
        }
    }
}
